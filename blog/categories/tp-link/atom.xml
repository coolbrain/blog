<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tp-link | ForgeBrain]]></title>
  <link href="http://coolbrain.github.com/blog/categories/tp-link/atom.xml" rel="self"/>
  <link href="http://coolbrain.github.com/"/>
  <updated>2013-07-30T00:05:17+08:00</updated>
  <id>http://coolbrain.github.com/</id>
  <author>
    <name><![CDATA[ForgeBrain]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Eleventh Day]]></title>
    <link href="http://coolbrain.github.com/blog/2013/07/29/eleventh-day/"/>
    <updated>2013-07-29T23:49:00+08:00</updated>
    <id>http://coolbrain.github.com/blog/2013/07/29/eleventh-day</id>
    <content type="html"><![CDATA[<blockquote><p><p>今天的讲座是编程规范，统一的代码规格有利于后面的阅读和维护。我们的组长是我们没有按照规范来写代码的话，就是能力，工作态度都不行的人。因为那些规范只要用心注意下，就应该不会出什么问题。</p>
<!-- more -->
<p>今天写代码发现写代码的能力好低，大学写的代码太少了，并且经常颓废，都不是一心一意地去解决问题，而是让问题积累。要努力写代码啦！ </p>
<p>今天总算见识了shell的厉害，以前一直都不愿意学，原来其作用还是好大的。与makeFile文件，svn和平时的工作都有密切的关系，特别是利用shell可以提高工作的效率。一步步来，一定行的，功夫不负有心人。</p>
<p>看了乔布斯的之前的采访，发现我们董事长跟我们说的话许多都是来自乔爷爷。</p></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eighth Day]]></title>
    <link href="http://coolbrain.github.com/blog/2013/07/25/eighth-day/"/>
    <updated>2013-07-25T00:46:00+08:00</updated>
    <id>http://coolbrain.github.com/blog/2013/07/25/eighth-day</id>
    <content type="html"><![CDATA[<blockquote><p><p>今天的培训讲座分别是实验室管理的规章制度和嵌入式linux的开发。我有点担心我不会使用设备，这说明我不够自信心，也不够进取，单单使用设备都学不会，那不是简直笨得无法救药，如示波器。嵌入式开发之前也接触过一点，但是知识懂点皮毛，没有耐心地去学习。</p>
<!-- more -->
<p>初略地学习shell编程，没有一本很好的书，让自己学习。那就应该要积极解决问题，从家里寄来了几本不错的书，其中有《鸟哥linux私房菜》,那就应该没借口说自己没好书学习了。</p>
<p>星期六也去打羽毛球了，虽然其中有些挫折，甚至不注意安全，这是非常不好的，又是犯一个老毛病，事前没有做好功课，连球拍的线都还没拉，就匆匆忙忙地去拉线和打球，足足迟到了一个小时，换做是另外的事情，也是这样。做事情没一点筹谋和策划，注定是没什么好结果的。</p>
<P>星期六打完球后，真是累的，可能一天吃了七个香蕉的缘故，没有消化好，都怪我没有自控能力。但是有一点是肯定的，那就是我发现我的脚痛发作了，运动会导致之前受过伤但没医好的病发作，这个就一直都是我的心病了，不过，人要看开点，小小问题也就不足挂齿。</p>
<p>星期日就要挨批了，买的书和送来的书都到了，一直在盼望，可惜到了，就什么兴奋都没有，并且也不去看了，反而看起电影来了，反而觉得电影还挺好看的，简直是愚蠢至极。现在是什么时候啦，看起《七宗罪》来啦，看起《大话西游》来啦，其实踏实做人，电影里的事情美好的事情还是会发生在现实中的，同时不好的事情也可以避免的。</p>
<p><strong>如果自己真要选择颓废的话，那我就要想想如何面对他人的嘲笑，讽刺和鄙视，还将自己看得连狗都不如，自己却无力回击，甚至他们是不学无术之人。人争一口气佛争一炷香。你能吞得下这口气？</strong></p></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Seventh Day]]></title>
    <link href="http://coolbrain.github.com/blog/2013/07/24/seventh-day/"/>
    <updated>2013-07-24T00:02:00+08:00</updated>
    <id>http://coolbrain.github.com/blog/2013/07/24/seventh-day</id>
    <content type="html"><![CDATA[<blockquote><p><p>今天的培训内容是时间管理和有效沟通。说起时间管理，如谈虎色变，心落千仗，因为之前我给自己制定目标，但是一个都没有做到，导致心情极其低落，恨透了什么时间管理，还不如没什么计划，见步走步，这样心理也踏踏实实，没有这么大的情绪起伏。其实我这种想法是错误的，因为我制定的目标是不切实际的，好高骛远的，不是可衡量的，违反了制定的目标的基本规则，反而受到时间管理的反效果，还不如顺其自然。</p>
<!-- more -->
<p>第二个内容就是有效沟通。在大学，我的说话方式就会令人误解，其实是语调和重音放得不对，说多就好了。有效沟通的关键在于听，说，问。</p>
<p>今天粗略地看了《深入理解计算机系统》的虚拟存储器，其主要功能：1.它在主存中自动缓存最近使用的存放磁盘上的虚拟地址空间的内容，对磁盘上页的引用会触发缺页，缺页将控制转移到操作系统的一个缺页处理程序。缺页处理程序将页面从磁盘拷贝到主存缓存，如果必要，将写回被驱逐的页。2.虚拟存储器简化了存储管理，进而简化了链接，在进程间共享数据，进程的存储器分配以及程序加载。3.虚拟存储器通过在每条页表条目中加入保护位，从而简化了存储器保护。</p>
<p>管理和使用虚拟存储器是一件困难和容易出错的任务。常见的错误事例：间接引用坏指针，读取未初始化的存储器，允许栈缓冲区溢出，假设指针和它们的指向的对象相同，引用指针而不是它所指向的对象，误解指针运算，引用不存在的变量，以及引起存储器泄漏。</p></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sixth Day]]></title>
    <link href="http://coolbrain.github.com/blog/2013/07/22/sixth-day/"/>
    <updated>2013-07-22T23:50:00+08:00</updated>
    <id>http://coolbrain.github.com/blog/2013/07/22/sixth-day</id>
    <content type="html"><![CDATA[<blockquote><p><p>今日是在tp-link的第六日，讲座的内容是邮件的使用规范。听到这个题目就有点掉以轻心，其实这个不但与自己的工作息息相关，而且很容易犯一些低级的错误。今天总算仔细学习下了，不懂地就问一下同事，涉及到使用<strong>过滤器对邮件进行分类</strong>，<strong>个人签名模版</strong>，<strong>纯文本txt与HTML格式的区别与使用</strong>，段落的格式，还有宏的使用。最终这些基础的工作都顺利完成了。</p>
<!-- more -->
<p>这一天主要是看了《深入理解计算机系统》的第五章优化程序性能，主要提到性能提高技术：1）为遇到的问题选择适当的算法和数据结构；2）避免限制优化的因素：a.消除连续的函数调用。在可能时，将计算移到循环体外；b.消除不必要的存储器引用。引入临时变量来保存结果，只有在最后的值计算出来时，才将结果存放到数组或全局变量中。3）低级优化：a.展开循环，降低开销，使进一步的优化成为可能；b.通过使用例如<strong>多个累积变量和重新组合</strong>等技术，找到方法提高指令级的并行；c.用功能的风格重写条件操作，使得编译采用条件数据传送。</p>
<p>第六章存储器层次结构，理解存储器层次结构本质，且利用它编写出更有效的程序。特别是以下技术:1)将注意力集中在<strong>内循环</strong>上，大部分计算和存储访问都发生在这里；2）通过按照数据对象存储在存储中的顺序、步长为1的来读数据，从而使得程序中的<strong>空间局部性</strong>最大；3）一旦从存储器中读入了一个数据对象，就尽可能多地使用它，从而使得程序中的<strong>时间局部性</strong>最大。</p>
<p>第七章链接。链接器主要是符号解析和重定位。符号解析将目标文件中的每个全局符号都绑定到唯一的定义，而重定位确定每个符号的最终存储地址，并修改对那些目标的引用。</p>
<p>第八章异常控制流，分为中断、故障、终止和陷阱。中断是异步发生的，是来自处理器外部的I/O设备的信号的结果。应用程序通过使用一个叫做陷阱或者系统调用的ECF形式，向操作系统请求服务。</p></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firth Day]]></title>
    <link href="http://coolbrain.github.com/blog/2013/07/19/firth-day/"/>
    <updated>2013-07-19T23:45:00+08:00</updated>
    <id>http://coolbrain.github.com/blog/2013/07/19/firth-day</id>
    <content type="html"><![CDATA[<blockquote><p><p>今天是到tp-link的第五天，听了两个讲座，一个是关于tp-link的研发文化，另外一个是关于如何成为一名合格的研发工程师。说的清楚的，知其然,也要知其所以然。不要说“大概”，“似乎”这样的字眼。要有敬业精神，天下之事始于易，从懂得的下手，把难的事情做对，将易的事情做好。tp-link的研发氛围是不错的，只要肯攀登，肯定有自己表现的舞台。如果不是，那就是得过且过，终究在悔恨中消失。</p>
<!-- more -->
<p><strong>我都不知道自己哪一天会突然离开，但活在世上，要对得起自己，对得起父母，对得起周围关心自己的人，自己就算离开，也都问心无愧。而不要总是担心明天不确定的事情，担心自己没有完成心愿就离开，要积极，乐观，我不敢说山重水复疑无路，柳暗花明又一村，但只要每一天都过得充实，过得快乐。每一天都看作是自己生命中最后的一天，那么今天就会去做些什么，当自己离开时，自己还会不会带着遗憾离开。</strong></p>
<p>今天主要看了《深入理解计算机系统》的第三章：程序机器级的表示。主要说的汇编语言，通过阅读和分析汇编语言，从而写出更为高效的C代码。switch语句应用的是跳转表的机制实现，比if-else语句执行要搞笑。union联合可以节省空间的使用，或者对struct结构体的字段的重新调整也可以减少空间的使用。最为紧要的是理解栈帧结构，在函数调用的栈进行的操作和递归函数的机制，了解到栈溢出，从而导致程序崩溃，找不到返回地址，或者跳转到去执行病毒的地址。</p>
<p>从做书的练习可以看得出，我半桶水，有很多的知识都没有掌握，真不愧是大学连一本完整的书都没有读完出来的人。那么工作了，是否应该将这本书读透呢？是否好应该知耻而后勇呢？是否好应该知道时间不留人，自己的时间不多呢？</p></p></blockquote>
]]></content>
  </entry>
  
</feed>
