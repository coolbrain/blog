<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Pjsip | ForgeBrain]]></title>
  <link href="http://coolbrain.github.com/blog/categories/pjsip/atom.xml" rel="self"/>
  <link href="http://coolbrain.github.com/"/>
  <updated>2014-02-23T14:07:06+08:00</updated>
  <id>http://coolbrain.github.com/</id>
  <author>
    <name><![CDATA[ForgeBrain]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[pjsip状态机]]></title>
    <link href="http://coolbrain.github.com/blog/2013/09/26/pjsip-state-machine/"/>
    <updated>2013-09-26T23:38:00+08:00</updated>
    <id>http://coolbrain.github.com/blog/2013/09/26/pjsip-state-machine</id>
    <content type="html"><![CDATA[<blockquote><p><p>近期在voip skeleton上增加了一个简单的状态机，分别是当前的状态（current state），事件（event），新的状态（new state），操作（action），使用的是list链表的方式管理，实现动态注册状态的处理。在pjsip 事务（transation state machine）状态机使用的是用数组的方式来实现，数组的下标为状态，内容为操作handle。</p>
<!-- more -->
<p>pjsip的事务状态用枚举定义：</p>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>transation状态声明  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">This</span> <span class="n">enumeration</span> <span class="n">represents</span> <span class="n">transaction</span> <span class="n">state</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="k">typedef</span> <span class="k">enum</span> <span class="n">pjsip_tsx_state_e</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">PJSIP_TSX_STATE_NULL</span><span class="p">,</span>   <span class="cm">/**&amp;lt; For UAC, before any message is sent.   */</span>
</span><span class='line'><span class="n">PJSIP_TSX_STATE_CALLING</span><span class="p">,</span>    <span class="cm">/**&amp;lt; For UAC, just after request is sent.   */</span>
</span><span class='line'><span class="n">PJSIP_TSX_STATE_TRYING</span><span class="p">,</span> <span class="cm">/**&amp;lt; For UAS, just after request is received.*/</span>
</span><span class='line'><span class="n">PJSIP_TSX_STATE_PROCEEDING</span><span class="p">,</span> <span class="cm">/**&amp;lt; For UAS/UAC, after provisional response.*/</span>
</span><span class='line'><span class="n">PJSIP_TSX_STATE_COMPLETED</span><span class="p">,</span>  <span class="cm">/**&amp;lt; For UAS/UAC, after final response.     */</span>
</span><span class='line'><span class="n">PJSIP_TSX_STATE_CONFIRMED</span><span class="p">,</span>  <span class="cm">/**&amp;lt; For UAS, after ACK is received.        */</span>
</span><span class='line'><span class="n">PJSIP_TSX_STATE_TERMINATED</span><span class="p">,</span> <span class="cm">/**&amp;lt; For UAS/UAC, before it&#39;s destroyed.    */</span>
</span><span class='line'><span class="n">PJSIP_TSX_STATE_DESTROYED</span><span class="p">,</span>  <span class="cm">/**&amp;lt; For UAS/UAC, will be destroyed now.    */</span>
</span><span class='line'><span class="n">PJSIP_TSX_STATE_MAX</span>     <span class="cm">/**&amp;lt; Number of states.              */</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="n">pjsip_tsx_state_e</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>pjsip状态处理函数的定义：</p>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>transation状态处理函数声明  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="n">pj_status_t</span> <span class="nf">tsx_on_state_null</span><span class="p">(</span>       <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                            <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="n">pj_status_t</span> <span class="n">tsx_on_state_calling</span><span class="p">(</span>    <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                            <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="n">pj_status_t</span> <span class="n">tsx_on_state_trying</span><span class="p">(</span>     <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                            <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="n">pj_status_t</span> <span class="n">tsx_on_state_proceeding_uas</span><span class="p">(</span> <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                        <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="n">pj_status_t</span> <span class="n">tsx_on_state_proceeding_uac</span><span class="p">(</span> <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                        <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="n">pj_status_t</span> <span class="n">tsx_on_state_completed_uas</span><span class="p">(</span>  <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                        <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="n">pj_status_t</span> <span class="n">tsx_on_state_completed_uac</span><span class="p">(</span>  <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                        <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="n">pj_status_t</span> <span class="n">tsx_on_state_confirmed</span><span class="p">(</span>  <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                        <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="n">pj_status_t</span> <span class="n">tsx_on_state_terminated</span><span class="p">(</span> <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                        <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="n">pj_status_t</span> <span class="n">tsx_on_state_destroyed</span><span class="p">(</span>  <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                        <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>pjsip状态机的注册：</p>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>transation 状态注册  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">State</span> <span class="n">handlers</span> <span class="k">for</span> <span class="n">UAC</span><span class="p">,</span> <span class="n">indexed</span> <span class="n">by</span> <span class="n">state</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span>  <span class="p">(</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tsx_state_handler_uac</span><span class="p">[</span><span class="n">PJSIP_TSX_STATE_MAX</span><span class="p">])(</span><span class="n">pjsip_transaction</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                          <span class="n">pjsip_event</span> <span class="o">*</span><span class="p">)</span> <span class="o">=</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_null</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_calling</span><span class="p">,</span>
</span><span class='line'><span class="nb">NULL</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_proceeding_uac</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_completed_uac</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_confirmed</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_terminated</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_destroyed</span><span class="p">,</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">};</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">State</span> <span class="n">handlers</span> <span class="k">for</span> <span class="n">UAS</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span>  <span class="p">(</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tsx_state_handler_uas</span><span class="p">[</span><span class="n">PJSIP_TSX_STATE_MAX</span><span class="p">])(</span><span class="n">pjsip_transaction</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                          <span class="n">pjsip_event</span> <span class="o">*</span><span class="p">)</span> <span class="o">=</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_null</span><span class="p">,</span>
</span><span class='line'><span class="nb">NULL</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_trying</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_proceeding_uas</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_completed_uas</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_confirmed</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_terminated</span><span class="p">,</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx_on_state_destroyed</span><span class="p">,</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<blockquote><p><p>当相应的事件来临时，就调用相应的处理函数handle和改变自身的状态，如ack来临，或者超时重传：</p>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>transation调用相应的处理函数  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">State</span> <span class="n">Calling</span> <span class="n">is</span> <span class="k">for</span> <span class="n">UAC</span> <span class="n">after</span> <span class="n">it</span> <span class="n">sends</span> <span class="n">request</span> <span class="n">but</span> <span class="n">before</span> <span class="n">any</span> <span class="n">responses</span>
</span><span class='line'> <span class="o">*</span> <span class="n">is</span> <span class="n">received</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="k">static</span> <span class="n">pj_status_t</span> <span class="n">tsx_on_state_calling</span><span class="p">(</span> <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                     <span class="n">pjsip_event</span> <span class="o">*</span><span class="n">event</span> <span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pj_assert</span><span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">state</span> <span class="o">==</span> <span class="n">PJSIP_TSX_STATE_CALLING</span><span class="p">);</span>
</span><span class='line'><span class="n">pj_assert</span><span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">role</span> <span class="o">==</span> <span class="n">PJSIP_ROLE_UAC</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="n">event</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">type</span> <span class="o">==</span> <span class="n">PJSIP_EVENT_TIMER</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span>
</span><span class='line'><span class="n">event</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">body</span><span class="p">.</span><span class="n">timer</span><span class="p">.</span><span class="n">entry</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">pj_status_t</span> <span class="n">status</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Retransmit the request. */</span>
</span><span class='line'>    <span class="n">status</span> <span class="o">=</span> <span class="n">tsx_retransmit</span><span class="p">(</span> <span class="n">tsx</span><span class="p">,</span> <span class="mi">1</span> <span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">status</span> <span class="o">!=</span> <span class="n">PJ_SUCCESS</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">status</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">event</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">type</span> <span class="o">==</span> <span class="n">PJSIP_EVENT_TIMER</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span>
</span><span class='line'>       <span class="n">event</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">body</span><span class="p">.</span><span class="n">timer</span><span class="p">.</span><span class="n">entry</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Cancel retransmission timer. */</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">pjsip_endpt_cancel_timer</span><span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">endpt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">);</span>
</span><span class='line'>    <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">transport_flag</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">=</span> <span class="o">~</span><span class="p">(</span><span class="n">TSX_HAS_PENDING_RESCHED</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Set status code */</span>
</span><span class='line'><span class="n">tsx_set_status_code</span><span class="p">(</span><span class="n">tsx</span><span class="p">,</span> <span class="n">PJSIP_SC_TSX_TIMEOUT</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Inform TU. */</span>
</span><span class='line'><span class="n">tsx_set_state</span><span class="p">(</span> <span class="n">tsx</span><span class="p">,</span> <span class="n">PJSIP_TSX_STATE_TERMINATED</span><span class="p">,</span>
</span><span class='line'>                   <span class="n">PJSIP_EVENT_TIMER</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Transaction is destroyed */</span>
</span><span class='line'><span class="c1">//return PJSIP_ETSXDESTROYED;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">event</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">type</span> <span class="o">==</span> <span class="n">PJSIP_EVENT_RX_MSG</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">pjsip_msg</span> <span class="o">*</span><span class="n">msg</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">code</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Get message instance */</span>
</span><span class='line'><span class="n">msg</span> <span class="o">=</span> <span class="n">event</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">body</span><span class="p">.</span><span class="n">rx_msg</span><span class="p">.</span><span class="n">rdata</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">msg_info</span><span class="p">.</span><span class="n">msg</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Better be a response message. */</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">msg</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">type</span> <span class="o">!=</span> <span class="n">PJSIP_RESPONSE_MSG</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">PJSIP_ENOTRESPONSEMSG</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">code</span> <span class="o">=</span> <span class="n">msg</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">line</span><span class="p">.</span><span class="n">status</span><span class="p">.</span><span class="n">code</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* If the response is final, cancel both retransmission and timeout</span>
</span><span class='line'><span class="cm"> * timer.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">code</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">=</span> <span class="mi">200</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">pjsip_endpt_cancel_timer</span><span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">endpt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">);</span>
</span><span class='line'>    <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">lock_timer</span><span class="p">(</span><span class="n">tsx</span><span class="p">);</span>
</span><span class='line'>    <span class="n">pjsip_endpt_cancel_timer</span><span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">endpt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">);</span>
</span><span class='line'>    <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">unlock_timer</span><span class="p">(</span><span class="n">tsx</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="cm">/* Cancel retransmit timer (for non-INVITE transaction, the</span>
</span><span class='line'><span class="cm">     * retransmit timer will be rescheduled at T2.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">pjsip_endpt_cancel_timer</span><span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">endpt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">);</span>
</span><span class='line'>    <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* For provisional response, only cancel retransmit when this</span>
</span><span class='line'><span class="cm">     * is an INVITE transaction. For non-INVITE, section 17.1.2.1</span>
</span><span class='line'><span class="cm">     * of RFC 3261 says that:</span>
</span><span class='line'><span class="cm">     *  - retransmit timer is set to T2</span>
</span><span class='line'><span class="cm">     *  - timeout timer F is not deleted.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">method</span><span class="p">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">PJSIP_INVITE_METHOD</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* Cancel timeout timer */</span>
</span><span class='line'>    <span class="n">lock_timer</span><span class="p">(</span><span class="n">tsx</span><span class="p">);</span>
</span><span class='line'>    <span class="n">pjsip_endpt_cancel_timer</span><span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">endpt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">);</span>
</span><span class='line'>    <span class="n">unlock_timer</span><span class="p">(</span><span class="n">tsx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">is_reliable</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="n">TIMER_ACTIVE</span><span class="p">;</span>
</span><span class='line'>        <span class="n">pjsip_endpt_schedule_timer</span><span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">endpt</span><span class="p">,</span>
</span><span class='line'>                       <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">retransmit_timer</span><span class="p">,</span>
</span><span class='line'>                       <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">t2_timer_val</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">transport_flag</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">=</span> <span class="o">~</span><span class="p">(</span><span class="n">TSX_HAS_PENDING_RESCHED</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Discard retransmission message if it is not INVITE.</span>
</span><span class='line'><span class="cm"> * The INVITE tdata is needed in case we have to generate ACK for</span>
</span><span class='line'><span class="cm"> * the final response.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cm">/* Keep last_tx for authorization. */</span>
</span><span class='line'><span class="c1">//blp: always keep last_tx until transaction is destroyed</span>
</span><span class='line'><span class="c1">//code = msg-&amp;gt;line.status.code;</span>
</span><span class='line'><span class="c1">//if (tsx-&amp;gt;method.id != PJSIP_INVITE_METHOD &amp;amp;&amp;amp; code!=401 &amp;amp;&amp;amp; code!=407) {</span>
</span><span class='line'><span class="c1">//    pjsip_tx_data_dec_ref(tsx-&amp;gt;last_tx);</span>
</span><span class='line'><span class="c1">//    tsx-&amp;gt;last_tx = NULL;</span>
</span><span class='line'><span class="c1">//}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Processing is similar to state Proceeding. */</span>
</span><span class='line'><span class="n">tsx_on_state_proceeding_uac</span><span class="p">(</span> <span class="n">tsx</span><span class="p">,</span> <span class="n">event</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'><span class="n">pj_assert</span><span class="p">(</span><span class="o">!</span><span class="s">&quot;Unexpected event&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">PJ_EBUG</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="n">PJ_SUCCESS</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<blockquote><p><p>pjsip 事务相应状态改变函数：</p>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>transation状态改变和改变相应处理函数  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Set</span> <span class="n">transaction</span> <span class="n">state</span><span class="p">,</span> <span class="n">and</span> <span class="n">inform</span> <span class="n">TU</span> <span class="n">about</span> <span class="n">the</span> <span class="n">transaction</span> <span class="n">state</span> <span class="n">change</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="n">tsx_set_state</span><span class="p">(</span> <span class="n">pjsip_transaction</span> <span class="o">*</span><span class="n">tsx</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>           <span class="n">pjsip_tsx_state_e</span> <span class="n">state</span><span class="p">,</span>
</span><span class='line'>           <span class="n">pjsip_event_id_e</span> <span class="n">event_src_type</span><span class="p">,</span>
</span><span class='line'>                       <span class="kt">void</span> <span class="o">*</span><span class="n">event_src</span> <span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pjsip_tsx_state_e</span> <span class="n">prev_state</span> <span class="o">=</span> <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">state</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/* New state must be greater than previous state */</span>
</span><span class='line'><span class="n">pj_assert</span><span class="p">(</span><span class="n">state</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">=</span> <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">state</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_LOG</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">obj_name</span><span class="p">,</span> <span class="s">&quot;State changed from %s to %s, event=%s&quot;</span><span class="p">,</span>
</span><span class='line'>       <span class="n">state_str</span><span class="p">[</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">state</span><span class="p">],</span> <span class="n">state_str</span><span class="p">[</span><span class="n">state</span><span class="p">],</span>
</span><span class='line'>           <span class="n">pjsip_event_str</span><span class="p">(</span><span class="n">event_src_type</span><span class="p">)));</span>
</span><span class='line'><span class="n">pj_log_push_indent</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Change state. */</span>
</span><span class='line'><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">state</span> <span class="o">=</span> <span class="n">state</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Update the state handlers. */</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">role</span> <span class="o">==</span> <span class="n">PJSIP_ROLE_UAC</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">state_handler</span> <span class="o">=</span> <span class="n">tsx_state_handler_uac</span><span class="p">[</span><span class="n">state</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">state_handler</span> <span class="o">=</span> <span class="n">tsx_state_handler_uas</span><span class="p">[</span><span class="n">state</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Before informing TU about state changed, inform TU about</span>
</span><span class='line'><span class="cm"> * rx event.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">event_src_type</span><span class="o">==</span><span class="n">PJSIP_EVENT_RX_MSG</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tsx_user</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">pjsip_rx_data</span> <span class="o">*</span><span class="n">rdata</span> <span class="o">=</span> <span class="p">(</span><span class="n">pjsip_rx_data</span><span class="o">*</span><span class="p">)</span> <span class="n">event_src</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">pj_assert</span><span class="p">(</span><span class="n">rdata</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">rdata</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">msg_info</span><span class="p">.</span><span class="n">msg</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">type</span> <span class="o">==</span> <span class="n">PJSIP_RESPONSE_MSG</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span>
</span><span class='line'>       <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tsx_user</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">on_rx_response</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">(</span><span class="o">*</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tsx_user</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">on_rx_response</span><span class="p">)(</span><span class="n">rdata</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Inform TU about state changed. */</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tsx_user</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tsx_user</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">on_tsx_state</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">pjsip_event</span> <span class="n">e</span><span class="p">;</span>
</span><span class='line'><span class="n">PJSIP_EVENT_INIT_TSX_STATE</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="n">tsx</span><span class="p">,</span> <span class="n">event_src_type</span><span class="p">,</span> <span class="n">event_src</span><span class="p">,</span>
</span><span class='line'>               <span class="n">prev_state</span><span class="p">);</span>
</span><span class='line'><span class="p">(</span><span class="o">*</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tsx_user</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">on_tsx_state</span><span class="p">)(</span><span class="n">tsx</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">e</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/* When the transaction is terminated, release transport, and free the</span>
</span><span class='line'><span class="cm"> * saved last transmitted message.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">state</span> <span class="o">==</span> <span class="n">PJSIP_TSX_STATE_TERMINATED</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">pj_time_val</span> <span class="n">timeout</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* If we&#39;re still waiting for a message to be sent.. */</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">transport_flag</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">TSX_HAS_PENDING_TRANSPORT</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="cm">/* Disassociate ourselves from the outstanding transmit data</span>
</span><span class='line'><span class="cm">     * so that when the send callback is called we will be able</span>
</span><span class='line'><span class="cm">     * to ignore that (otherwise we&#39;ll get assertion, see</span>
</span><span class='line'><span class="cm">     * http://trac.pjsip.org/repos/ticket/1033)</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">pending_tx</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">pending_tx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">mod_data</span><span class="p">[</span><span class="n">mod_tsx_layer</span><span class="p">.</span><span class="n">mod</span><span class="p">.</span><span class="n">id</span><span class="p">]</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">pending_tx</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">transport_flag</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">=</span> <span class="o">~</span><span class="p">(</span><span class="n">TSX_HAS_PENDING_TRANSPORT</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">lock_timer</span><span class="p">(</span><span class="n">tsx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Cancel timeout timer. */</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">pjsip_endpt_cancel_timer</span><span class="p">(</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">endpt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">);</span>
</span><span class='line'>    <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="n">TIMER_ACTIVE</span><span class="p">;</span>
</span><span class='line'><span class="n">pjsip_endpt_schedule_timer</span><span class="p">(</span> <span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">endpt</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tsx</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout_timer</span><span class="p">,</span>
</span><span class='line'>                <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">timeout</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">unlock_timer</span><span class="p">(</span><span class="n">tsx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">state</span> <span class="o">==</span> <span class="n">PJSIP_TSX_STATE_DESTROYED</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Unregister transaction. */</span>
</span><span class='line'><span class="n">mod_tsx_layer_unregister_tsx</span><span class="p">(</span><span class="n">tsx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Destroy transaction. */</span>
</span><span class='line'><span class="n">tsx_destroy</span><span class="p">(</span><span class="n">tsx</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">pj_log_pop_indent</span><span class="p">();</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pjsip 初步分析]]></title>
    <link href="http://coolbrain.github.com/blog/2013/09/22/internet/"/>
    <updated>2013-09-22T19:43:00+08:00</updated>
    <id>http://coolbrain.github.com/blog/2013/09/22/internet</id>
    <content type="html"><![CDATA[<blockquote><p><p>pjsip是实现sip的协议栈。相对于其它的sip协议栈，pjsip实现相对稳定且跨平台。首先分析pjlib基本库，其这些库的实现都比较精湛，是深入学习编程的好材料。并且设计了很多的测试用例，对函数的接口进行测试。<p>
<!-- more -->
<p>pjlib库包含操作系统的抽象，具体是可移植性的线程，锁，信号量，事件，高精度时间等；网络I/O,具体为socket抽象，网络地址解析，select I/O复用；时间管理；多种数据结构，字符串的操作，数组帮助，哈希表，链表，红黑树等；内存池管理的实现较为精湛。
<p>如红黑树的代码实现：</p>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rbtree.h  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">file</span> <span class="n">rbtree</span><span class="p">.</span><span class="n">h</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">brief</span> <span class="n">Red</span><span class="o">/</span><span class="n">Black</span> <span class="n">Tree</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pj</span><span class="o">/</span><span class="n">types</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">PJ_BEGIN_DECL</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">strong</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">defgroup</span> <span class="n">PJ_RBTREE</span> <span class="n">Red</span><span class="o">/</span><span class="n">Black</span> <span class="n">Balanced</span> <span class="n">Tree</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">ingroup</span> <span class="n">PJ_DS</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">brief</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Red</span><span class="o">/</span><span class="n">Black</span> <span class="n">tree</span> <span class="n">is</span> <span class="n">the</span> <span class="n">variant</span> <span class="n">of</span> <span class="n">balanced</span> <span class="n">tree</span><span class="p">,</span> <span class="n">where</span> <span class="n">the</span> <span class="n">search</span><span class="p">,</span> <span class="n">insert</span><span class="p">,</span>
</span><span class='line'> <span class="o">*</span> <span class="n">and</span> <span class="n">delete</span> <span class="n">operation</span> <span class="n">is</span> <span class="err">\</span><span class="n">b</span> <span class="n">guaranteed</span> <span class="n">to</span> <span class="n">take</span> <span class="n">at</span> <span class="n">most</span> <span class="err">\</span><span class="n">a</span> <span class="n">O</span><span class="p">(</span> <span class="n">lg</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="p">).</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="p">{</span>
</span><span class='line'> <span class="err">*/</span>
</span><span class='line'><span class="o">/&lt;/</span><span class="n">strong</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Color</span> <span class="n">type</span> <span class="k">for</span> <span class="n">Red</span><span class="o">-</span><span class="n">Black</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="err">*/</span>
</span><span class='line'><span class="k">typedef</span> <span class="k">enum</span> <span class="n">pj_rbcolor_t</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">PJ_RBCOLOR_BLACK</span><span class="p">,</span>
</span><span class='line'><span class="n">PJ_RBCOLOR_RED</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="n">pj_rbcolor_t</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">The</span> <span class="n">type</span> <span class="n">of</span> <span class="n">the</span> <span class="n">node</span> <span class="n">of</span> <span class="n">the</span> <span class="n">R</span><span class="o">/</span><span class="n">B</span> <span class="n">Tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="n">pj_rbtree_node</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/** Pointers to the node&#39;s parent, and left and right siblings. */</span>
</span><span class='line'><span class="k">struct</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">parent</span><span class="p">,</span> <span class="o">*</span><span class="n">left</span><span class="p">,</span> <span class="o">*</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Key associated with the node. */</span>
</span><span class='line'><span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">key</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** User data associated with the node. */</span>
</span><span class='line'><span class="kt">void</span> <span class="o">*</span><span class="n">user_data</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** The R/B Tree node color. */</span>
</span><span class='line'><span class="n">pj_rbcolor_t</span> <span class="n">color</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="n">pj_rbtree_node</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">The</span> <span class="n">type</span> <span class="n">of</span> <span class="n">function</span> <span class="n">use</span> <span class="n">to</span> <span class="n">compare</span> <span class="n">key</span> <span class="n">value</span> <span class="n">of</span> <span class="n">tree</span> <span class="n">node</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="k">return</span>
</span><span class='line'> <span class="o">*</span>  <span class="mi">0</span> <span class="k">if</span> <span class="n">the</span> <span class="n">keys</span> <span class="n">are</span> <span class="n">equal</span>
</span><span class='line'> <span class="o">*</span> <span class="o">&lt;</span><span class="mi">0</span> <span class="k">if</span> <span class="n">key1</span> <span class="n">is</span> <span class="n">lower</span> <span class="n">than</span> <span class="n">key2</span>
</span><span class='line'> <span class="o">*</span> <span class="o">&gt;</span><span class="mi">0</span> <span class="k">if</span> <span class="n">key1</span> <span class="n">is</span> <span class="n">greater</span> <span class="n">than</span> <span class="n">key2</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="k">typedef</span> <span class="kt">int</span> <span class="n">pj_rbtree_comp</span><span class="p">(</span><span class="k">const</span> <span class="kt">void</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">key1</span><span class="p">,</span> <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">key2</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Declaration</span> <span class="n">of</span> <span class="n">a</span> <span class="n">red</span><span class="o">-</span><span class="n">black</span> <span class="n">tree</span><span class="p">.</span> <span class="n">All</span> <span class="n">elements</span> <span class="n">in</span> <span class="n">the</span> <span class="n">tree</span> <span class="n">must</span> <span class="n">have</span> <span class="n">UNIQUE</span>
</span><span class='line'> <span class="o">*</span> <span class="n">key</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="n">A</span> <span class="n">red</span> <span class="n">black</span> <span class="n">tree</span> <span class="n">always</span> <span class="n">maintains</span> <span class="n">the</span> <span class="n">balance</span> <span class="n">of</span> <span class="n">the</span> <span class="n">tree</span><span class="p">,</span> <span class="n">so</span> <span class="n">that</span> <span class="n">the</span>
</span><span class='line'> <span class="o">*</span> <span class="n">tree</span> <span class="n">height</span> <span class="n">will</span> <span class="n">not</span> <span class="n">be</span> <span class="n">greater</span> <span class="n">than</span> <span class="n">lg</span><span class="p">(</span><span class="n">N</span><span class="p">).</span> <span class="n">Insert</span><span class="p">,</span> <span class="n">search</span><span class="p">,</span> <span class="n">and</span> <span class="n">delete</span>
</span><span class='line'> <span class="o">*</span> <span class="n">operation</span> <span class="n">will</span> <span class="n">take</span> <span class="n">lg</span><span class="p">(</span><span class="n">N</span><span class="p">)</span> <span class="n">on</span> <span class="n">the</span> <span class="n">worst</span> <span class="k">case</span><span class="p">.</span> <span class="n">But</span> <span class="k">for</span> <span class="n">insert</span> <span class="n">and</span> <span class="n">delete</span><span class="p">,</span>
</span><span class='line'> <span class="o">*</span> <span class="n">there</span> <span class="n">is</span> <span class="n">additional</span> <span class="n">time</span> <span class="n">needed</span> <span class="n">to</span> <span class="n">maintain</span> <span class="n">the</span> <span class="n">balance</span> <span class="n">of</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="n">pj_rbtree</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span> <span class="n">null_node</span><span class="p">;</span>   <span class="cm">/**&amp;lt; Constant to indicate NULL node.    */</span>
</span><span class='line'><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">null</span><span class="p">;</span>       <span class="cm">/**&amp;lt; Constant to indicate NULL node.    */</span>
</span><span class='line'><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">root</span><span class="p">;</span>       <span class="cm">/**&amp;lt; Root tree node.                    */</span>
</span><span class='line'><span class="kt">unsigned</span> <span class="n">size</span><span class="p">;</span>              <span class="cm">/**&amp;lt; Number of elements in the tree.    */</span>
</span><span class='line'><span class="n">pj_rbtree_comp</span> <span class="o">*</span><span class="n">comp</span><span class="p">;</span>       <span class="cm">/**&amp;lt; Key comparison function.           */</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="n">pj_rbtree</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Guidance</span> <span class="n">on</span> <span class="n">how</span> <span class="n">much</span> <span class="n">memory</span> <span class="n">required</span> <span class="k">for</span> <span class="n">each</span> <span class="n">of</span> <span class="n">the</span> <span class="n">node</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">PJ_RBTREE_NODE_SIZE</span>     <span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="n">pj_rbtree_node</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Guidance</span> <span class="n">on</span> <span class="n">memory</span> <span class="n">required</span> <span class="k">for</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">PJ_RBTREE_SIZE</span>          <span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="n">pj_rbtree</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Initialize</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">tree</span> <span class="n">the</span> <span class="n">tree</span> <span class="n">to</span> <span class="n">be</span> <span class="n">initialized</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">comp</span> <span class="n">key</span> <span class="n">comparison</span> <span class="n">function</span> <span class="n">to</span> <span class="n">be</span> <span class="n">used</span> <span class="k">for</span> <span class="n">this</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kt">void</span> <span class="n">pj_rbtree_init</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span> <span class="n">pj_rbtree_comp</span> <span class="o">*</span><span class="n">comp</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Get</span> <span class="n">the</span> <span class="n">first</span> <span class="n">element</span> <span class="n">in</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="n">The</span> <span class="n">first</span> <span class="n">element</span> <span class="n">always</span> <span class="n">has</span> <span class="n">the</span> <span class="n">least</span> <span class="n">value</span> <span class="k">for</span> <span class="n">the</span> <span class="n">key</span><span class="p">,</span> <span class="n">according</span> <span class="n">to</span>
</span><span class='line'> <span class="o">*</span> <span class="n">the</span> <span class="n">comparison</span> <span class="n">function</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">tree</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="n">the</span> <span class="n">tree</span> <span class="n">node</span><span class="p">,</span> <span class="n">or</span> <span class="nb">NULL</span> <span class="k">if</span> <span class="n">the</span> <span class="n">tree</span> <span class="n">has</span> <span class="n">no</span> <span class="n">element</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="n">pj_rbtree_node</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_first</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">*</span><span class="n">tree</span> <span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Get</span> <span class="n">the</span> <span class="n">last</span> <span class="n">element</span> <span class="n">in</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="n">The</span> <span class="n">last</span> <span class="n">element</span> <span class="n">always</span> <span class="n">has</span> <span class="n">the</span> <span class="n">greatest</span> <span class="n">key</span> <span class="n">value</span><span class="p">,</span> <span class="n">according</span> <span class="n">to</span> <span class="n">the</span>
</span><span class='line'> <span class="o">*</span> <span class="n">comparison</span> <span class="n">function</span> <span class="n">defined</span> <span class="k">for</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">tree</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="n">the</span> <span class="n">tree</span> <span class="n">node</span><span class="p">,</span> <span class="n">or</span> <span class="nb">NULL</span> <span class="k">if</span> <span class="n">the</span> <span class="n">tree</span> <span class="n">has</span> <span class="n">no</span> <span class="n">element</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="n">pj_rbtree_node</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_last</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">*</span><span class="n">tree</span> <span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Get</span> <span class="n">the</span> <span class="n">successive</span> <span class="n">element</span> <span class="k">for</span> <span class="n">the</span> <span class="n">specified</span> <span class="n">node</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="n">The</span> <span class="n">successive</span> <span class="n">element</span> <span class="n">is</span> <span class="n">an</span> <span class="n">element</span> <span class="n">with</span> <span class="n">greater</span> <span class="n">key</span> <span class="n">value</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">tree</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">node</span> <span class="n">the</span> <span class="n">node</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="n">the</span> <span class="n">successive</span> <span class="n">node</span><span class="p">,</span> <span class="n">or</span> <span class="nb">NULL</span> <span class="k">if</span> <span class="n">the</span> <span class="n">node</span> <span class="n">has</span> <span class="n">no</span> <span class="n">successor</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="n">pj_rbtree_node</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_next</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">*</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                 <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">The</span> <span class="n">the</span> <span class="n">previous</span> <span class="n">node</span> <span class="k">for</span> <span class="n">the</span> <span class="n">specified</span> <span class="n">node</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="n">The</span> <span class="n">previous</span> <span class="n">node</span> <span class="n">is</span> <span class="n">an</span> <span class="n">element</span> <span class="n">with</span> <span class="n">less</span> <span class="n">key</span> <span class="n">value</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">tree</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">node</span> <span class="n">the</span> <span class="n">node</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="n">the</span> <span class="n">previous</span> <span class="n">node</span><span class="p">,</span> <span class="n">or</span> <span class="nb">NULL</span> <span class="k">if</span> <span class="n">the</span> <span class="n">node</span> <span class="n">has</span> <span class="n">no</span> <span class="n">previous</span> <span class="n">node</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="n">pj_rbtree_node</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_prev</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">*</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                 <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Insert</span> <span class="n">a</span> <span class="n">new</span> <span class="n">node</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="n">The</span> <span class="n">node</span> <span class="n">will</span> <span class="n">be</span> <span class="n">inserted</span> <span class="n">at</span> <span class="n">sorted</span> <span class="n">location</span><span class="p">.</span> <span class="n">The</span> <span class="n">key</span> <span class="n">of</span> <span class="n">the</span> <span class="n">node</span> <span class="n">must</span>
</span><span class='line'> <span class="o">*</span> <span class="n">be</span> <span class="n">UNIQUE</span><span class="p">,</span> <span class="n">i</span><span class="p">.</span><span class="n">e</span><span class="p">.</span> <span class="n">it</span> <span class="n">hasn</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">existed</span> <span class="n">in</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">tree</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">node</span> <span class="n">the</span> <span class="n">node</span> <span class="n">to</span> <span class="n">be</span> <span class="n">inserted</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="n">zero</span> <span class="n">on</span> <span class="n">success</span><span class="p">,</span> <span class="n">or</span> <span class="o">-</span><span class="mi">1</span> <span class="k">if</span> <span class="n">the</span> <span class="n">key</span> <span class="n">already</span> <span class="n">exist</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kt">int</span> <span class="n">pj_rbtree_insert</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>               <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Find</span> <span class="n">a</span> <span class="n">node</span> <span class="n">which</span> <span class="n">has</span> <span class="n">the</span> <span class="n">specified</span> <span class="n">key</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">tree</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">key</span> <span class="n">the</span> <span class="n">key</span> <span class="n">to</span> <span class="n">search</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="n">the</span> <span class="n">tree</span> <span class="n">node</span> <span class="n">with</span> <span class="n">the</span> <span class="n">specified</span> <span class="n">key</span><span class="p">,</span> <span class="n">or</span> <span class="nb">NULL</span> <span class="k">if</span> <span class="n">the</span> <span class="n">key</span> <span class="n">can</span> <span class="n">not</span>
</span><span class='line'> <span class="o">*</span>         <span class="n">be</span> <span class="n">found</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="n">pj_rbtree_node</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_find</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">*</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                 <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">key</span> <span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Erase</span> <span class="n">a</span> <span class="n">node</span> <span class="n">from</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">tree</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">node</span> <span class="n">the</span> <span class="n">node</span> <span class="n">to</span> <span class="n">be</span> <span class="n">erased</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="n">the</span> <span class="n">tree</span> <span class="n">node</span> <span class="n">itself</span><span class="p">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="n">pj_rbtree_node</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_erase</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">*</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                  <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Get</span> <span class="n">the</span> <span class="n">maximum</span> <span class="n">tree</span> <span class="n">height</span> <span class="n">from</span> <span class="n">the</span> <span class="n">specified</span> <span class="n">node</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">tree</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">node</span> <span class="n">the</span> <span class="n">node</span><span class="p">,</span> <span class="n">or</span> <span class="nb">NULL</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">root</span> <span class="n">of</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="n">the</span> <span class="n">maximum</span> <span class="n">height</span><span class="p">,</span> <span class="n">which</span> <span class="n">should</span> <span class="n">be</span> <span class="n">at</span> <span class="n">most</span> <span class="n">lg</span><span class="p">(</span><span class="n">N</span><span class="p">)</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kt">unsigned</span> <span class="n">pj_rbtree_max_height</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Get</span> <span class="n">the</span> <span class="n">minumum</span> <span class="n">tree</span> <span class="n">height</span> <span class="n">from</span> <span class="n">the</span> <span class="n">specified</span> <span class="n">node</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">tree</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="n">param</span> <span class="n">node</span> <span class="n">the</span> <span class="n">node</span><span class="p">,</span> <span class="n">or</span> <span class="nb">NULL</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">root</span> <span class="n">of</span> <span class="n">the</span> <span class="n">tree</span><span class="p">.</span>
</span><span class='line'> <span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="n">the</span> <span class="n">height</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kt">unsigned</span> <span class="n">pj_rbtree_min_height</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<blockquote><p><p>红黑树的具体实现：</p>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rbtree.c  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
<span class='line-number'>442</span>
<span class='line-number'>443</span>
<span class='line-number'>444</span>
<span class='line-number'>445</span>
<span class='line-number'>446</span>
<span class='line-number'>447</span>
<span class='line-number'>448</span>
<span class='line-number'>449</span>
<span class='line-number'>450</span>
<span class='line-number'>451</span>
<span class='line-number'>452</span>
<span class='line-number'>453</span>
<span class='line-number'>454</span>
<span class='line-number'>455</span>
<span class='line-number'>456</span>
<span class='line-number'>457</span>
<span class='line-number'>458</span>
<span class='line-number'>459</span>
<span class='line-number'>460</span>
<span class='line-number'>461</span>
<span class='line-number'>462</span>
<span class='line-number'>463</span>
<span class='line-number'>464</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">left_rotate</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span> <span class="n">pj_rbtree_node</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">node</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">rnode</span><span class="p">,</span> <span class="o">*</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">rnode</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">rnode</span> <span class="o">==</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">=</span> <span class="n">rnode</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">rnode</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">!=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rnode</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'><span class="n">parent</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'><span class="n">rnode</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">parent</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">parent</span> <span class="o">!=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">==</span> <span class="n">node</span><span class="p">)</span>
</span><span class='line'>   <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">=</span> <span class="n">rnode</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>   <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">=</span> <span class="n">rnode</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span> <span class="o">=</span> <span class="n">rnode</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">rnode</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">=</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">rnode</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="kt">void</span> <span class="n">right_rotate</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span> <span class="n">pj_rbtree_node</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">node</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">lnode</span><span class="p">,</span> <span class="o">*</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">lnode</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">lnode</span> <span class="o">==</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">=</span> <span class="n">lnode</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">lnode</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">!=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">)</span>
</span><span class='line'><span class="n">lnode</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'><span class="n">parent</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'><span class="n">lnode</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">parent</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">parent</span> <span class="o">!=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">==</span> <span class="n">node</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">=</span> <span class="n">lnode</span><span class="p">;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>    <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">=</span> <span class="n">lnode</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span> <span class="o">=</span> <span class="n">lnode</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">lnode</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">=</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">lnode</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="kt">void</span> <span class="n">insert_fixup</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span> <span class="n">pj_rbtree_node</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">node</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">temp</span><span class="p">,</span> <span class="o">*</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="p">(</span><span class="n">node</span> <span class="o">!=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">parent</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">parent</span> <span class="o">==</span> <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">temp</span> <span class="o">=</span> <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span> <span class="o">=</span> <span class="n">parent</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">node</span> <span class="o">==</span> <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="n">node</span> <span class="o">=</span> <span class="n">parent</span><span class="p">;</span>
</span><span class='line'>       <span class="n">left_rotate</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span> <span class="n">node</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">temp</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span> <span class="o">=</span> <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'>        <span class="n">right_rotate</span><span class="p">(</span> <span class="n">tree</span><span class="p">,</span> <span class="n">temp</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">temp</span> <span class="o">=</span> <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span> <span class="o">=</span> <span class="n">parent</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">node</span> <span class="o">==</span> <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">node</span> <span class="o">=</span> <span class="n">parent</span><span class="p">;</span>
</span><span class='line'>        <span class="n">right_rotate</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span> <span class="n">node</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">temp</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span> <span class="o">=</span> <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'>        <span class="n">left_rotate</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span> <span class="n">temp</span><span class="p">);</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">static</span> <span class="kt">void</span> <span class="n">delete_fixup</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span> <span class="n">pj_rbtree_node</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">node</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">temp</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="p">(</span><span class="n">node</span> <span class="o">!=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">==</span> <span class="n">node</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">temp</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'>        <span class="n">left_rotate</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">);</span>
</span><span class='line'>        <span class="n">temp</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_BLACK</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'>        <span class="n">right_rotate</span><span class="p">(</span> <span class="n">tree</span><span class="p">,</span> <span class="n">temp</span><span class="p">);</span>
</span><span class='line'>        <span class="n">temp</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">left_rotate</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">);</span>
</span><span class='line'>        <span class="n">node</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">temp</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'>        <span class="n">right_rotate</span><span class="p">(</span> <span class="n">tree</span><span class="p">,</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">);</span>
</span><span class='line'>        <span class="n">temp</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_BLACK</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span>
</span><span class='line'>    <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'>        <span class="n">left_rotate</span><span class="p">(</span> <span class="n">tree</span><span class="p">,</span> <span class="n">temp</span><span class="p">);</span>
</span><span class='line'>        <span class="n">temp</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span><span class="p">;</span>
</span><span class='line'>        <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'>        <span class="n">right_rotate</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">);</span>
</span><span class='line'>        <span class="n">node</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">pj_rbtree_init</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span> <span class="n">pj_rbtree_comp</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">comp</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null_node</span><span class="p">;</span>
</span><span class='line'><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">key</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">user_data</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">size</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">;</span>
</span><span class='line'><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">comp</span> <span class="o">=</span> <span class="n">comp</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_first</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">register</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span><span class="p">;</span>
</span><span class='line'><span class="k">register</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">null</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="p">(</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span>
</span><span class='line'><span class="n">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">;</span>
</span><span class='line'><span class="k">return</span> <span class="n">node</span> <span class="o">!=</span> <span class="n">null</span> <span class="o">?</span> <span class="n">node</span> <span class="o">:</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_last</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">register</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span><span class="p">;</span>
</span><span class='line'><span class="k">register</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">null</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="p">(</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span>
</span><span class='line'><span class="n">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'><span class="k">return</span> <span class="n">node</span> <span class="o">!=</span> <span class="n">null</span> <span class="o">?</span> <span class="n">node</span> <span class="o">:</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_next</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                <span class="k">register</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">register</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">null</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">node</span><span class="o">=</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">!=</span><span class="n">null</span><span class="p">;</span> <span class="n">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">)</span>
</span><span class='line'>    <span class="cm">/* void */</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">register</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">temp</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="n">temp</span><span class="o">!=</span><span class="n">null</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="o">==</span><span class="n">node</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">node</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
</span><span class='line'>    <span class="n">temp</span> <span class="o">=</span> <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">node</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="n">node</span> <span class="o">!=</span> <span class="n">null</span> <span class="o">?</span> <span class="n">node</span> <span class="o">:</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_prev</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                <span class="k">register</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">register</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">null</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="n">node</span><span class="o">=</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">;</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="o">!=</span><span class="n">null</span><span class="p">;</span> <span class="n">node</span><span class="o">=</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">)</span>
</span><span class='line'>   <span class="cm">/* void */</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">register</span> <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">temp</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="n">temp</span><span class="o">!=</span><span class="n">null</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">==</span><span class="n">node</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">node</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
</span><span class='line'>    <span class="n">temp</span> <span class="o">=</span> <span class="n">temp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">node</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="n">node</span> <span class="o">!=</span> <span class="n">null</span> <span class="o">?</span> <span class="n">node</span> <span class="o">:</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">pj_rbtree_insert</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">*</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>              <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">element</span> <span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">rv</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span><span class="p">,</span> <span class="o">*</span><span class="n">parent</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">,</span>
</span><span class='line'>       <span class="o">*</span><span class="n">null</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">;</span>
</span><span class='line'><span class="n">pj_rbtree_comp</span> <span class="o">*</span><span class="n">comp</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">comp</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">node</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span><span class="p">;</span>
</span><span class='line'><span class="k">while</span> <span class="p">(</span><span class="n">node</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">rv</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">comp</span><span class="p">)(</span><span class="n">element</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">key</span><span class="p">,</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">key</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">rv</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="cm">/* found match, i.e. entry with equal key already exist */</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">parent</span> <span class="o">=</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'>    <span class="n">node</span> <span class="o">=</span> <span class="n">rv</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">0</span> <span class="o">?</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">:</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">element</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_RED</span><span class="p">;</span>
</span><span class='line'><span class="n">element</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">=</span> <span class="n">element</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">=</span> <span class="n">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">node</span> <span class="o">=</span> <span class="n">element</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">parent</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">parent</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">rv</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>   <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">=</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>   <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">=</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'>    <span class="n">insert_fixup</span><span class="p">(</span> <span class="n">tree</span><span class="p">,</span> <span class="n">node</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span> <span class="o">=</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'>    <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">null</span><span class="p">;</span>
</span><span class='line'>    <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">++</span><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'><span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_find</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">key</span> <span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">rv</span><span class="p">;</span>
</span><span class='line'><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span><span class="p">;</span>
</span><span class='line'><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">null</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">;</span>
</span><span class='line'><span class="n">pj_rbtree_comp</span> <span class="o">*</span><span class="n">comp</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">comp</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="p">(</span><span class="n">node</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">rv</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">comp</span><span class="p">)(</span><span class="n">key</span><span class="p">,</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">key</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">rv</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'>    <span class="n">node</span> <span class="o">=</span> <span class="n">rv</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">0</span> <span class="o">?</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">:</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="n">node</span> <span class="o">!=</span> <span class="n">null</span> <span class="o">?</span> <span class="n">node</span> <span class="o">:</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">pj_rbtree_erase</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                 <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">succ</span><span class="p">;</span>
</span><span class='line'><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">null</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">;</span>
</span><span class='line'><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">child</span><span class="p">;</span>
</span><span class='line'><span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">==</span> <span class="n">null</span> <span class="o">||</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">==</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">succ</span> <span class="o">=</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="n">succ</span><span class="o">=</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span> <span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">!=</span><span class="n">null</span><span class="p">;</span> <span class="n">succ</span><span class="o">=</span><span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">)</span>
</span><span class='line'>   <span class="cm">/* void */</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">child</span> <span class="o">=</span> <span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">!=</span> <span class="n">null</span> <span class="o">?</span> <span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">:</span> <span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'><span class="n">parent</span> <span class="o">=</span> <span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'><span class="n">child</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">parent</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">parent</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">==</span> <span class="n">succ</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">=</span> <span class="n">child</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>   <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">=</span> <span class="n">child</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span>
</span><span class='line'>    <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span> <span class="o">=</span> <span class="n">child</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">succ</span> <span class="o">!=</span> <span class="n">node</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>    <span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">;</span>
</span><span class='line'>    <span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">;</span>
</span><span class='line'>    <span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">parent</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">parent</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">if</span> <span class="p">(</span><span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">==</span><span class="n">node</span><span class="p">)</span>
</span><span class='line'>        <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">=</span><span class="n">succ</span><span class="p">;</span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>    <span class="n">parent</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="o">=</span><span class="n">succ</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span>
</span><span class='line'>   <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">succ</span><span class="p">;;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span>
</span><span class='line'>    <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">parent</span> <span class="o">=</span> <span class="n">succ</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span> <span class="o">==</span> <span class="n">node</span><span class="p">)</span>
</span><span class='line'>   <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span> <span class="o">=</span> <span class="n">succ</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">succ</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">==</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">child</span> <span class="o">!=</span> <span class="n">null</span><span class="p">)</span>
</span><span class='line'>    <span class="n">delete_fixup</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span> <span class="n">child</span><span class="p">);</span>
</span><span class='line'>    <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">color</span> <span class="o">=</span> <span class="n">PJ_RBCOLOR_BLACK</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'><span class="k">return</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">unsigned</span> <span class="n">pj_rbtree_max_height</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">*</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                   <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">unsigned</span> <span class="n">l</span><span class="p">,</span> <span class="n">r</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">node</span><span class="o">==</span><span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'><span class="n">node</span> <span class="o">=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">!=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span> <span class="o">?</span> <span class="n">pj_rbtree_max_height</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span> <span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">!=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span> <span class="o">?</span> <span class="n">pj_rbtree_max_height</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span> <span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">return</span> <span class="n">l</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">r</span> <span class="o">?</span> <span class="n">l</span> <span class="o">:</span> <span class="n">r</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">unsigned</span> <span class="n">pj_rbtree_min_height</span><span class="p">(</span> <span class="n">pj_rbtree</span> <span class="o">*</span><span class="n">tree</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                   <span class="n">pj_rbtree_node</span> <span class="o">*</span><span class="n">node</span> <span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">unsigned</span> <span class="n">l</span><span class="p">,</span> <span class="n">r</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">PJ_CHECK_STACK</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">node</span><span class="o">==</span><span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'><span class="n">node</span><span class="o">=</span><span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">root</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="p">(</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span> <span class="o">!=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">)</span> <span class="o">?</span> <span class="n">pj_rbtree_max_height</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">left</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span> <span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="p">(</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span> <span class="o">!=</span> <span class="n">tree</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">null</span><span class="p">)</span> <span class="o">?</span> <span class="n">pj_rbtree_max_height</span><span class="p">(</span><span class="n">tree</span><span class="p">,</span><span class="n">node</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">right</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span> <span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">return</span> <span class="n">l</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">r</span> <span class="o">?</span> <span class="n">r</span> <span class="o">:</span> <span class="n">l</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
