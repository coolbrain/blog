<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Socket | ForgeBrain]]></title>
  <link href="http://coolbrain.github.com/blog/categories/socket/atom.xml" rel="self"/>
  <link href="http://coolbrain.github.com/"/>
  <updated>2013-12-13T00:08:14+08:00</updated>
  <id>http://coolbrain.github.com/</id>
  <author>
    <name><![CDATA[ForgeBrain]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Traceroute源码]]></title>
    <link href="http://coolbrain.github.com/blog/2013/07/09/traceroute/"/>
    <updated>2013-07-09T12:31:00+08:00</updated>
    <id>http://coolbrain.github.com/blog/2013/07/09/traceroute</id>
    <content type="html"><![CDATA[<blockquote><p><p>Traceroute允许确定IP数据报从本地主机游历到某个远程主机所经过的路径。traceroute使用IPv4的TTL字段或IPv6的跳限字段以及两种ICMP消息。它一开始向目的地发送一个TTL(或跳限）为1的数据报。这个数据报导致第一跳路由器返送一个ICMP“time exceeded in transmit"(传输中超时）错误。接着它递增TTL一次发送一个UDP数据报，从而逐步确定下一跳路由器。当某个UDP数据报到达最终目的地时，目标是由这个主机返送一个ICMP“port unreachable(端口不可达）“错误。这个目标通过向一个随机选取的（但愿）未被目的主机使用的端口发送UDP数据报得以实现。</p>
<!-- more -->
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>traceroute  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">in_systm</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">ip</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">ip_icmp</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">udp</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">define</span> <span class="n">BUFSIZE</span>  <span class="mi">1500</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">struct</span> <span class="n">rec</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">u_short</span> <span class="n">rec_seq</span><span class="p">;</span>
</span><span class='line'><span class="n">u_short</span> <span class="n">rec_ttl</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">timeval</span>  <span class="n">rec_tv</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">};</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">char</span> <span class="n">recvbuf</span><span class="p">[</span><span class="n">BUFSIZE</span><span class="p">];</span>
</span><span class='line'><span class="kt">char</span> <span class="n">sendbuf</span><span class="p">[</span><span class="n">BUFSIZE</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">int</span>     <span class="n">datalen</span><span class="p">;</span>
</span><span class='line'><span class="kt">char</span> <span class="o">*</span><span class="n">host</span><span class="p">;</span>
</span><span class='line'><span class="n">u_short</span> <span class="n">sport</span><span class="p">,</span> <span class="n">dport</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>     <span class="n">nsent</span><span class="p">;</span>
</span><span class='line'><span class="n">pid_t</span>  <span class="n">pid</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>     <span class="n">probe</span><span class="p">,</span> <span class="n">nprobes</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>     <span class="n">sendfd</span><span class="p">,</span> <span class="n">recvfd</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>     <span class="n">ttl</span><span class="p">,</span> <span class="n">max_ttl</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>     <span class="n">verbose</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>     <span class="n">gotalarm</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">const</span> <span class="kt">char</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">icmpcode_v4</span><span class="p">(</span><span class="kt">int</span><span class="p">);</span>
</span><span class='line'><span class="k">const</span> <span class="kt">char</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">icmpcode_v6</span><span class="p">(</span><span class="kt">int</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">recv_v4</span><span class="p">(</span><span class="kt">int</span> <span class="p">,</span><span class="k">struct</span> <span class="n">timeval</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">recv_v6</span><span class="p">(</span><span class="kt">int</span> <span class="p">,</span><span class="k">struct</span> <span class="n">timeval</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">sig_alrm</span><span class="p">(</span><span class="kt">int</span> <span class="p">);</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">traceloop</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">tv_sub</span><span class="p">(</span><span class="k">struct</span> <span class="n">timeval</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">struct</span> <span class="n">proto</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="p">(</span><span class="o">*</span><span class="n">icmpcode</span><span class="p">)(</span><span class="kt">int</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span>             <span class="p">(</span><span class="o">*</span><span class="n">recv</span><span class="p">)(</span><span class="kt">int</span> <span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="p">);</span>
</span><span class='line'><span class="k">struct</span>        <span class="n">sockaddr</span> <span class="o">*</span><span class="n">sasend</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span>        <span class="n">sockaddr</span> <span class="o">*</span><span class="n">sarecv</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span>        <span class="n">sockaddr</span> <span class="o">*</span><span class="n">salast</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span>        <span class="n">sockaddr</span> <span class="o">*</span><span class="n">sabind</span><span class="p">;</span>
</span><span class='line'><span class="n">socklen_t</span>    <span class="n">salen</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>             <span class="n">icmpproto</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>             <span class="n">ttllevel</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>             <span class="n">ttloptname</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">*</span><span class="n">pr</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span>  <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">ip6</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">icmp6</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">struct</span> <span class="n">proto</span> <span class="n">proto_v4</span> <span class="o">=</span> <span class="p">{</span> <span class="n">icmpcode_v4</span><span class="p">,</span> <span class="n">recv_v4</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">IPPROTO_ICMP</span><span class="p">,</span> <span class="n">IPPROTO_IP</span><span class="p">,</span> <span class="n">IP_TTL</span><span class="p">};</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span> <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">struct</span> <span class="n">proto</span> <span class="n">proto_v6</span> <span class="o">=</span><span class="p">{</span><span class="n">icmpcode_v6</span><span class="p">,</span> <span class="n">recv_v6</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">IPPROTO_ICMPV6</span><span class="p">,</span> <span class="n">IPPROTO_IPV6</span><span class="p">,</span> <span class="n">IPV6_UNICAST_HOPS</span><span class="p">};</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">datalen</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">rec</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="n">max_ttl</span> <span class="o">=</span> <span class="mi">30</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">nprobes</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'><span class="n">u_short</span> <span class="n">dport</span> <span class="o">=</span> <span class="mi">32768</span> <span class="o">+</span> <span class="mi">666</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">addrinfo</span> <span class="o">*</span><span class="n">a</span><span class="p">;</span>
</span><span class='line'><span class="kt">char</span> <span class="o">*</span><span class="n">h</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">opterr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">while</span><span class="p">(</span> <span class="p">(</span> <span class="n">c</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="s">&quot;m:v&quot;</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">case</span> <span class="sc">&#39;m&#39;</span>:
</span><span class='line'>                    <span class="k">if</span><span class="p">(</span> <span class="p">(</span> <span class="n">max_ttl</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">optarg</span><span class="p">))</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;invalid -m value&quot;</span><span class="p">);</span>
</span><span class='line'>                    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                <span class="k">case</span> <span class="sc">&#39;v&#39;</span>:
</span><span class='line'>                    <span class="n">verbose</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                <span class="k">case</span> <span class="sc">&#39;?&#39;</span>:
</span><span class='line'>                    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;unrecognized option:%c&quot;</span><span class="p">,</span> <span class="n">c</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="n">optind</span> <span class="o">!=</span> <span class="n">argc</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;usage : traceroute [ -m &amp;lt;maxttl&amp;gt; -v] &amp;lt;hostname&amp;gt;&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="n">optind</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">pid</span> <span class="o">=</span> <span class="n">getpid</span><span class="p">();</span>
</span><span class='line'><span class="n">signal</span><span class="p">(</span><span class="n">SIGALRM</span><span class="p">,</span> <span class="n">sig_alrm</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">ai</span> <span class="o">=</span> <span class="n">host_serv</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">h</span> <span class="o">=</span> <span class="n">sock_ntop_host</span><span class="p">(</span><span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addr</span><span class="p">,</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addrlen</span><span class="p">);</span>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;traceroute to %s (%s): %d hops max, %d data bytes </span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_canonname</span><span class="o">?</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_canonname</span><span class="o">:</span><span class="n">h</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span><span class="n">max_ttl</span><span class="p">,</span> <span class="n">datalen</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_family</span> <span class="o">==</span> <span class="n">AF_INET</span>  <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">pr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">proto_v4</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span>  <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>     <span class="p">}</span>
</span><span class='line'><span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_family</span> <span class="o">==</span> <span class="n">AF_INET6</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">pr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">proto_v6</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">IN6_IS_ADDR_V4MAPPED</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;(((</span><span class="k">struct</span> <span class="n">sockaddr_in6</span> <span class="o">*</span><span class="p">)</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addr</span><span class="p">)</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sin6_addr</span><span class="p">)))</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;cannot traceroute IPV4-mapped IPV6 address&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;unknown address family  %d&quot;</span><span class="p">,</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_family</span><span class="p">);</span>
</span><span class='line'><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span> <span class="o">=</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">si_addr</span><span class="p">;</span>
</span><span class='line'><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span> <span class="o">=</span> <span class="n">calloc</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addrlen</span><span class="p">);</span>
</span><span class='line'><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salast</span> <span class="o">=</span> <span class="n">calloc</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addrlen</span><span class="p">);</span>
</span><span class='line'><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sabind</span> <span class="o">=</span> <span class="n">calloc</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addrlen</span><span class="p">);</span>
</span><span class='line'><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span> <span class="o">=</span><span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addrlen</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">traceloop</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">exit</span><span class="p">();</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">traceloop</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">seq</span><span class="p">,</span> <span class="n">code</span><span class="p">,</span> <span class="n">done</span><span class="p">;</span>
</span><span class='line'><span class="kt">double</span> <span class="n">rtt</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">rec</span> <span class="o">*</span><span class="n">rec</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">timeval</span> <span class="n">tvrecv</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">recvfd</span> <span class="o">=</span> <span class="n">socket</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sa_family</span><span class="p">,</span> <span class="n">SOCK_RAW</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmpproto</span><span class="p">);</span>    <span class="cm">/*创建两个套接字*/</span>
</span><span class='line'><span class="n">setuid</span><span class="p">(</span><span class="n">getuid</span><span class="p">());</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span> <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">(</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sa_family</span> <span class="o">==</span> <span class="n">AF_INET6</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">verbose</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>                  <span class="cm">/*设置ICMPv6接收过滤器*/</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">icmp6_filter</span> <span class="n">myfilt</span><span class="p">;</span>
</span><span class='line'>        <span class="n">ICMP6_FILTER_SETBLOCKALL</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">myfilt</span><span class="p">);</span>
</span><span class='line'>        <span class="n">ICMP6_FILTER_SETPASS</span><span class="p">(</span><span class="n">ICMP6_TIME_EXCEEDED</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">myfilt</span><span class="p">);</span>
</span><span class='line'>        <span class="n">ICMP6_FILTER_SETPASS</span><span class="p">(</span><span class="n">ICMP6_DST_UNREACH</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">myfilt</span><span class="p">);</span>
</span><span class='line'>        <span class="n">setsockopt</span><span class="p">(</span><span class="n">recvfd</span><span class="p">,</span> <span class="n">IPPROTO_IPV6</span><span class="p">,</span> <span class="n">ICMP6_FILTER</span><span class="p">,</span>
</span><span class='line'>                <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">myfilt</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">myfilt</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">sendfd</span> <span class="o">=</span> <span class="n">socket</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sa_family</span><span class="p">,</span><span class="n">SOCK_DGRAM</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>               <span class="cm">/*给UDP套接字捆绑源端口*/</span>
</span><span class='line'>
</span><span class='line'><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sabind</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sa_family</span> <span class="o">=</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sa_family</span><span class="p">;</span>
</span><span class='line'><span class="n">sport</span> <span class="o">=</span> <span class="p">(</span><span class="n">getpid</span><span class="p">()</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="mh">0xffff</span><span class="p">)</span> <span class="o">|</span> <span class="mh">0x8000</span><span class="p">;</span>
</span><span class='line'><span class="n">sock_set_port</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sabind</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">,</span> <span class="n">htons</span><span class="p">(</span><span class="n">sport</span><span class="p">));</span>
</span><span class='line'><span class="n">bind</span><span class="p">(</span><span class="n">sendfd</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sabind</span><span class="p">,</span>  <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">sig_alrm</span><span class="p">(</span><span class="n">SIGALRM</span><span class="p">);</span>        <span class="cm">/*建立SIGALRM的信号处理函数*/</span>
</span><span class='line'>
</span><span class='line'><span class="n">seq</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">done</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">ttl</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">ttl</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">max_ttl</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">done</span> <span class="o">==</span><span class="mi">0</span><span class="p">;</span> <span class="n">ttl</span> <span class="o">++</span><span class="p">)</span>        <span class="cm">/*主循环,设置TTL或跳限并发送3个探测分组*/</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">setsockopt</span><span class="p">(</span><span class="n">sendfd</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ttllevel</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ttloptname</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">ttl</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
</span><span class='line'>        <span class="n">bzero</span><span class="p">(</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salast</span> <span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%2d&quot;</span><span class="p">,</span> <span class="n">ttl</span> <span class="p">);</span>
</span><span class='line'>        <span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span> <span class="n">probe</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">probe</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">nprobes</span><span class="p">;</span> <span class="n">probe</span> <span class="o">++</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">rec</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">rec</span><span class="o">*</span><span class="p">)</span> <span class="n">sendbuf</span><span class="p">;</span>
</span><span class='line'>                <span class="n">rec</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">rec_seq</span> <span class="o">=</span> <span class="o">++</span><span class="n">seq</span><span class="p">;</span>
</span><span class='line'>                <span class="n">rec</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">rec_ttl</span> <span class="o">=</span> <span class="n">ttl</span><span class="p">;</span>
</span><span class='line'>                <span class="n">gettimeofday</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">rec</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">rec_tv</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">sock_set_port</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">,</span> <span class="n">htons</span><span class="p">(</span><span class="n">dport</span><span class="o">+</span> <span class="n">seq</span><span class="p">));</span>     <span class="cm">/*设置目的端口并发送UDP数据报*/</span>
</span><span class='line'>                <span class="n">sendto</span><span class="p">(</span><span class="n">sendfd</span><span class="p">,</span> <span class="n">sendbuf</span><span class="p">,</span><span class="n">datalen</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span> <span class="p">(</span> <span class="n">code</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">recv</span><span class="p">)(</span><span class="n">seq</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tvrecv</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">3</span><span class="p">)</span>    <span class="cm">/*读取ICMP消息*/</span>
</span><span class='line'>                    <span class="n">printf</span><span class="p">(</span><span class="s">&quot; * &quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">else</span>                     <span class="cm">/*显示应答*/</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="kt">char</span> <span class="n">str</span><span class="p">[</span><span class="n">NI_MAXHOST</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>                        <span class="k">if</span><span class="p">(</span> <span class="n">sock_cmp_addr</span><span class="p">(</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salast</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span> <span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>                            <span class="p">{</span>
</span><span class='line'>                                <span class="k">if</span><span class="p">(</span> <span class="n">getnameinfo</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">,</span> <span class="n">str</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">str</span><span class="p">),</span><span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>                                    <span class="p">{</span>
</span><span class='line'>                                        <span class="n">printf</span><span class="p">(</span><span class="s">&quot; %s (%s)&quot;</span><span class="p">,</span> <span class="n">str</span><span class="p">,</span> <span class="n">sock_ntop_host</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">));</span>
</span><span class='line'>                                    <span class="p">}</span>
</span><span class='line'>                                <span class="k">else</span>
</span><span class='line'>                                    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span> <span class="n">sock_ntop_host</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">));</span>
</span><span class='line'>                                <span class="n">memcpy</span><span class="p">(</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salast</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">);</span>
</span><span class='line'>                            <span class="p">}</span>
</span><span class='line'>                        <span class="n">tv_sub</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tvrecv</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">rec</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">rec_tv</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">rtt</span> <span class="o">=</span> <span class="n">tvrecv</span><span class="p">.</span><span class="n">tv_sec</span><span class="o">*</span><span class="mf">1000.0</span> <span class="o">+</span> <span class="n">tvrecv</span><span class="p">.</span><span class="n">tv_usec</span><span class="o">/</span><span class="mf">1000.0</span><span class="p">;</span>
</span><span class='line'>                        <span class="n">printf</span><span class="p">(</span><span class="s">&quot; %.3f ms&quot;</span><span class="p">,</span> <span class="n">rtt</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                        <span class="k">if</span><span class="p">(</span> <span class="n">code</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">done</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">code</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">printf</span><span class="p">(</span><span class="s">&quot; (ICMP %s)&quot;</span><span class="p">,</span> <span class="p">(</span><span class="o">*</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmpcode</span><span class="p">)(</span><span class="n">code</span><span class="p">));</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">recv_v4</span><span class="p">(</span><span class="kt">int</span> <span class="n">seq</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">hlen1</span><span class="p">,</span> <span class="n">hlen2</span><span class="p">,</span> <span class="n">icmplen</span> <span class="p">,</span><span class="n">ret</span><span class="p">;</span>
</span><span class='line'><span class="n">socklen_t</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'><span class="kt">ssize_t</span> <span class="n">n</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">ip</span> <span class="o">*</span><span class="n">ip</span><span class="p">,</span> <span class="o">*</span><span class="n">hip</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">icmp</span> <span class="o">*</span><span class="n">icmp</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">udphdr</span> <span class="o">*</span><span class="n">udp</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gotalarm</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">alarm</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>           <span class="cm">/*设置报警时钟并读入每个ICMP消息*/</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span> <span class="p">;</span> <span class="p">;)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">gotalarm</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>        <span class="n">len</span> <span class="o">=</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">;</span>
</span><span class='line'>        <span class="n">n</span> <span class="o">=</span> <span class="n">recvfrom</span><span class="p">(</span><span class="n">recvfd</span><span class="p">,</span> <span class="n">recvbuf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">recvbuf</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">n</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span> <span class="n">errno</span> <span class="o">==</span> <span class="n">EINTR</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="nf">printf</span><span class="p">(</span><span class="s">&quot;recvfrom error&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="n">ip</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">ip</span> <span class="o">*</span><span class="p">)</span> <span class="n">recvbuf</span><span class="p">;</span>                <span class="cm">/*获取ICMP首部指针*/</span>
</span><span class='line'>        <span class="n">hlen1</span> <span class="o">=</span> <span class="n">ip</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ip_hl</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">icmp</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">icmp</span> <span class="o">*</span><span class="p">)</span> <span class="p">(</span><span class="n">recvbuf</span> <span class="o">+</span> <span class="n">hlen1</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">icmplen</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="n">hlen1</span> <span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span><span class="p">)</span>
</span><span class='line'>            <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_type</span> <span class="o">==</span> <span class="n">ICMP_TIMXCEED</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span>
</span><span class='line'>                            <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_code</span> <span class="o">==</span> <span class="n">ICMP_TIMXCEED_INTRANS</span><span class="p">)</span>   <span class="cm">/*处理ICMP传输中超时错误*/</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span> <span class="n">icmplen</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span> <span class="o">+</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">ip</span><span class="p">))</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">hip</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">ip</span> <span class="o">*</span><span class="p">)(</span> <span class="n">recvbuf</span> <span class="o">+</span> <span class="n">hlen1</span> <span class="o">+</span> <span class="mi">8</span><span class="p">);</span>
</span><span class='line'>                <span class="n">hlen2</span> <span class="o">=</span> <span class="n">hip</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ip_hl</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span> <span class="n">icmplen</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span> <span class="o">+</span> <span class="n">hlen2</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">udp</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">udphdr</span> <span class="o">*</span><span class="p">)</span> <span class="p">(</span><span class="n">recvbuf</span> <span class="o">+</span> <span class="n">hlen1</span> <span class="o">+</span> <span class="mi">8</span> <span class="o">+</span> <span class="n">hlen2</span><span class="p">);</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span> <span class="n">hip</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ip_p</span> <span class="o">==</span> <span class="n">IPPROTO_UDP</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">udp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">uh_sport</span> <span class="o">==</span> <span class="n">htons</span><span class="p">(</span><span class="n">sport</span><span class="p">)</span>
</span><span class='line'>                            <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">udp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">uh_dport</span> <span class="o">==</span> <span class="n">htons</span><span class="p">(</span><span class="n">dport</span> <span class="o">+</span> <span class="n">seq</span><span class="p">))</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">ret</span> <span class="o">=</span> <span class="o">-</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span> <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_type</span> <span class="o">==</span> <span class="n">ICMP_UNREACH</span><span class="p">)</span><span class="cm">/*处理ICMP传输中不可达错误*/</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span> <span class="n">icmplen</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span> <span class="o">+</span> <span class="k">sizeof</span><span class="p">(</span> <span class="k">struct</span> <span class="n">ip</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">hip</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">ip</span> <span class="o">*</span><span class="p">)(</span><span class="n">recvbuf</span> <span class="o">+</span> <span class="n">hlen1</span> <span class="o">+</span> <span class="mi">8</span><span class="p">);</span>
</span><span class='line'>                <span class="n">hlen2</span> <span class="o">=</span> <span class="n">hip</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ip_hl</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span> <span class="n">icmplen</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span> <span class="o">+</span> <span class="n">hlen2</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">udp</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">udphdr</span> <span class="o">*</span><span class="p">)</span> <span class="p">(</span><span class="n">recvbuf</span> <span class="o">+</span> <span class="n">hlen1</span> <span class="o">+</span> <span class="mi">8</span> <span class="o">+</span> <span class="n">hlen2</span><span class="p">);</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span> <span class="n">hip</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ip_p</span> <span class="o">==</span> <span class="n">IPPROTO_UDP</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">udp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">uh_sport</span> <span class="o">==</span> <span class="n">htons</span><span class="p">(</span><span class="n">sport</span><span class="p">)</span>
</span><span class='line'>                                    <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">udp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">uh_dport</span> <span class="o">==</span> <span class="n">htons</span><span class="p">(</span><span class="n">dport</span> <span class="o">+</span> <span class="n">seq</span><span class="p">))</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span><span class="p">(</span> <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_code</span> <span class="o">==</span> <span class="n">ICMP_UNREACH_PORT</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">ret</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">else</span>
</span><span class='line'>                            <span class="n">ret</span> <span class="o">=</span> <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_code</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">verbose</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">printf</span><span class="p">(</span><span class="s">&quot; (from %s: type = %d, code = %d)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">sock_ntop_host</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">),</span>
</span><span class='line'>                    <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_type</span><span class="p">,</span> <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_code</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="n">alarm</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="n">gettimeofday</span><span class="p">(</span><span class="n">tv</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'><span class="k">return</span> <span class="p">(</span><span class="n">ret</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">sig_alrm</span><span class="p">(</span><span class="kt">int</span> <span class="n">signo</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">gotalarm</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">recv_v6</span><span class="p">(</span><span class="kt">int</span> <span class="n">seq</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span> <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span>  <span class="n">hlen2</span><span class="p">,</span> <span class="n">icmp6len</span> <span class="p">,</span><span class="n">ret</span><span class="p">;</span>
</span><span class='line'><span class="n">socklen_t</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'><span class="kt">ssize_t</span> <span class="n">n</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">ip6_hdr</span>  <span class="o">*</span><span class="n">hip6</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">icmp6_hdr</span>  <span class="o">*</span><span class="n">icmp6</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">udphdr</span> <span class="o">*</span><span class="n">udp</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gotalarm</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">alarm</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span> <span class="p">;</span> <span class="p">;)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">gotalarm</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>        <span class="n">len</span> <span class="o">=</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">;</span>
</span><span class='line'>        <span class="n">n</span> <span class="o">=</span> <span class="n">recvfrom</span><span class="p">(</span><span class="n">recvfd</span><span class="p">,</span> <span class="n">recvbuf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">recvbuf</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">n</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span> <span class="n">errno</span> <span class="o">==</span> <span class="n">EINTR</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="nf">printf</span><span class="p">(</span><span class="s">&quot;recvfrom error&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">icmp6</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">icmp6_hdr</span> <span class="o">*</span><span class="p">)</span> <span class="n">recvbuf</span> <span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">icmp6len</span> <span class="o">=</span> <span class="n">n</span> <span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span><span class="p">)</span>
</span><span class='line'>            <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_type</span> <span class="o">==</span> <span class="n">ICMP6_TIME_EXCEEDED</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span>
</span><span class='line'>                <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_code</span> <span class="o">==</span> <span class="n">CMP6_TIME_EXCEEDED_INTRANS</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span> <span class="n">icmp6len</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span> <span class="o">+</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">ip6_hdr</span><span class="p">)</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">hip6</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">ip6_hdr</span> <span class="o">*</span><span class="p">)(</span> <span class="n">recvbuf</span><span class="o">+</span> <span class="mi">8</span><span class="p">);</span>
</span><span class='line'>                <span class="n">hlen2</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span> <span class="k">struct</span> <span class="n">ip6_hdr</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">udp</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">udphdr</span> <span class="o">*</span><span class="p">)</span> <span class="p">(</span><span class="n">recvbuf</span>  <span class="o">+</span> <span class="mi">8</span> <span class="o">+</span> <span class="n">hlen2</span><span class="p">);</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span> <span class="n">hip6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ip6_nxt</span> <span class="o">==</span> <span class="n">IPPROTO_UDP</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">udp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">uh_sport</span> <span class="o">==</span> <span class="n">htons</span><span class="p">(</span><span class="n">sport</span><span class="p">)</span>
</span><span class='line'>                            <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">udp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">uh_dport</span> <span class="o">==</span> <span class="n">htons</span><span class="p">(</span><span class="n">dport</span> <span class="o">+</span> <span class="n">seq</span><span class="p">))</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">ret</span> <span class="o">=</span> <span class="o">-</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span> <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_type</span> <span class="o">==</span> <span class="n">ICMP6_DST_UNREACH</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span> <span class="n">icmp6len</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span> <span class="o">+</span> <span class="k">sizeof</span><span class="p">(</span> <span class="k">struct</span> <span class="n">ip6_hdr</span><span class="p">)</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>               <span class="n">hip6</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">ip6_hdr</span> <span class="o">*</span><span class="p">)(</span> <span class="n">recvbuf</span><span class="o">+</span> <span class="mi">8</span><span class="p">);</span>
</span><span class='line'>                <span class="n">hlen2</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span> <span class="k">struct</span> <span class="n">ip6_hdr</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">udp</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">udphdr</span> <span class="o">*</span><span class="p">)</span> <span class="p">(</span><span class="n">recvbuf</span>  <span class="o">+</span> <span class="mi">8</span> <span class="o">+</span> <span class="n">hlen2</span><span class="p">);</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span> <span class="n">hip6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ip6_nxt</span> <span class="o">==</span> <span class="n">IPPROTO_UDP</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">udp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">uh_sport</span> <span class="o">==</span> <span class="n">htons</span><span class="p">(</span><span class="n">sport</span><span class="p">)</span>
</span><span class='line'>                            <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">udp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">uh_dport</span> <span class="o">==</span> <span class="n">htons</span><span class="p">(</span><span class="n">dport</span> <span class="o">+</span> <span class="n">seq</span><span class="p">))</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span><span class="p">(</span> <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_code</span> <span class="o">==</span> <span class="n">ICMP6_DST_UNREACH_NOPORT</span><span class="p">)</span>
</span><span class='line'>                            <span class="n">ret</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">else</span>
</span><span class='line'>                            <span class="n">ret</span> <span class="o">=</span> <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_code</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">verbose</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">printf</span><span class="p">(</span><span class="s">&quot; (from %s: type = %d, code = %d)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">sock_ntop_host</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">),</span>
</span><span class='line'>                    <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_type</span><span class="p">,</span> <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_code</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="n">alarm</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="n">gettimeofday</span><span class="p">(</span><span class="n">tv</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'><span class="k">return</span> <span class="p">(</span><span class="n">ret</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<blockquote><p><p>原始套接字提供3个能力：1.进程可以读写ICMPv4、IGMPv4和ICMPv6等分组； 2.进程可以读写内核不处理其协议字段的IP数据报； 3.进程可以自行构造IPv4首部，通常用于诊断目的（亦或不幸地被黑客们所利用).</p></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ping 源码]]></title>
    <link href="http://coolbrain.github.com/blog/2013/07/09/ping/"/>
    <updated>2013-07-09T11:57:00+08:00</updated>
    <id>http://coolbrain.github.com/blog/2013/07/09/ping</id>
    <content type="html"><![CDATA[<blockquote><p><p>ping程序操作非常简单，往某个IP地址发送一个ICMP回射请求，该节点则以一个ICMP回射应答响应。此程序用到原始套接字。</p>
<!-- more -->
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ping  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
<span class='line-number'>442</span>
<span class='line-number'>443</span>
<span class='line-number'>444</span>
<span class='line-number'>445</span>
<span class='line-number'>446</span>
<span class='line-number'>447</span>
<span class='line-number'>448</span>
<span class='line-number'>449</span>
<span class='line-number'>450</span>
<span class='line-number'>451</span>
<span class='line-number'>452</span>
<span class='line-number'>453</span>
<span class='line-number'>454</span>
<span class='line-number'>455</span>
<span class='line-number'>456</span>
<span class='line-number'>457</span>
<span class='line-number'>458</span>
<span class='line-number'>459</span>
<span class='line-number'>460</span>
<span class='line-number'>461</span>
<span class='line-number'>462</span>
<span class='line-number'>463</span>
<span class='line-number'>464</span>
<span class='line-number'>465</span>
<span class='line-number'>466</span>
<span class='line-number'>467</span>
<span class='line-number'>468</span>
<span class='line-number'>469</span>
<span class='line-number'>470</span>
<span class='line-number'>471</span>
<span class='line-number'>472</span>
<span class='line-number'>473</span>
<span class='line-number'>474</span>
<span class='line-number'>475</span>
<span class='line-number'>476</span>
<span class='line-number'>477</span>
<span class='line-number'>478</span>
<span class='line-number'>479</span>
<span class='line-number'>480</span>
<span class='line-number'>481</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">in_systm</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">ip</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">ip_icmp</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netdb</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">sys</span><span class="o">/</span><span class="n">socket</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">arpa</span><span class="o">/</span><span class="n">inet</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">stdio</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">errno</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">unistd</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">sys</span><span class="o">/</span><span class="n">types</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">sys</span><span class="o">/</span><span class="n">time</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">signal</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">define</span>  <span class="n">BUFSIZE</span>  <span class="mi">1500</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">char</span>  <span class="n">sendbuf</span><span class="p">[</span><span class="n">BUFSIZE</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">char</span>    <span class="o">*</span><span class="n">host</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>     <span class="n">nsent</span><span class="p">;</span>
</span><span class='line'><span class="n">pid_t</span>   <span class="n">pid</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>     <span class="n">sockfd</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>     <span class="n">verbose</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span>    <span class="n">init_v6</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span>    <span class="nf">proc_v4</span><span class="p">(</span><span class="kt">char</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">,</span> <span class="kt">ssize_t</span><span class="p">,</span> <span class="k">struct</span> <span class="n">msghdr</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span>    <span class="nf">proc_v6</span><span class="p">(</span><span class="kt">char</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">,</span> <span class="kt">ssize_t</span><span class="p">,</span> <span class="k">struct</span> <span class="n">msghdr</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span>    <span class="nf">send_v4</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span>    <span class="nf">send_v6</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span>    <span class="nf">readloop</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span>    <span class="nf">sig_alrm</span><span class="p">(</span><span class="kt">int</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span>    <span class="nf">tv_sub</span><span class="p">(</span><span class="k">struct</span> <span class="n">timeval</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">struct</span>   <span class="n">proto</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">void</span>    <span class="p">(</span><span class="o">*</span><span class="n">fproc</span><span class="p">)(</span><span class="kt">char</span> <span class="o">*</span><span class="p">,</span> <span class="kt">ssize_t</span><span class="p">,</span> <span class="k">struct</span> <span class="n">msghdr</span> <span class="o">*</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span>    <span class="p">(</span><span class="o">*</span><span class="n">fsend</span><span class="p">)(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span>    <span class="p">(</span><span class="o">*</span><span class="n">finit</span><span class="p">)(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="k">struct</span>  <span class="n">sockaddr</span> <span class="o">*</span><span class="n">sasend</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span>  <span class="n">sockaddr</span> <span class="o">*</span><span class="n">sarecv</span><span class="p">;</span>
</span><span class='line'><span class="n">socklen_t</span>   <span class="n">salen</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span>     <span class="n">icmpproto</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">*</span><span class="n">pr</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span> <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">ip6</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">netinet</span><span class="o">/</span><span class="n">icmp6</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="err">定义</span><span class="n">IPv4</span><span class="err">和</span><span class="n">IPv6</span><span class="err">的</span><span class="n">proto</span><span class="err">结构</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="k">struct</span> <span class="n">proto</span> <span class="n">proto_v4</span> <span class="o">=&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">{</span><span class="n">proc_v4</span><span class="p">,</span> <span class="n">send_v4</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span> <span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="n">IPPROTO_ICMP</span><span class="p">};</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span>  <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">struct</span> <span class="n">proto</span> <span class="n">proto_v6</span> <span class="o">=&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">{</span><span class="n">proc_v6</span><span class="p">,</span> <span class="n">send_v6</span><span class="p">,</span> <span class="n">init_v6</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span> <span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="n">IPPROTO_ICMP6</span><span class="p">};</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">datalen</span> <span class="o">=</span><span class="mi">56</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="err">获取主机和相关信息</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="k">struct</span> <span class="n">addrinfo</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">host_serv</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">host</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">serv</span><span class="p">,</span> <span class="kt">int</span> <span class="n">family</span><span class="p">,</span> <span class="kt">int</span> <span class="n">socktype</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span>  <span class="n">n</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">addrinfo</span> <span class="n">hints</span><span class="p">,</span> <span class="o">*</span><span class="n">res</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">bzero</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">hints</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">addrinfo</span><span class="p">));</span>
</span><span class='line'><span class="n">hints</span><span class="p">.</span><span class="n">ai_flags</span> <span class="o">=</span> <span class="n">AI_CANONNAME</span><span class="p">;</span>
</span><span class='line'><span class="n">hints</span><span class="p">.</span><span class="n">ai_family</span> <span class="o">=</span> <span class="n">family</span><span class="p">;</span>
</span><span class='line'><span class="n">hints</span><span class="p">.</span><span class="n">ai_socktype</span> <span class="o">=</span> <span class="n">socktype</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="p">(</span> <span class="n">n</span> <span class="o">=</span> <span class="n">getaddrinfo</span><span class="p">(</span> <span class="n">host</span><span class="p">,</span> <span class="n">serv</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">hints</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">res</span><span class="p">))</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span><span class="n">res</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="err">将</span><span class="n">ip</span><span class="err">地址值形式转变为表达形式</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kt">char</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">sock_ntop_host</span><span class="p">(</span><span class="k">const</span> <span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">sa</span><span class="p">,</span> <span class="n">socklen_t</span> <span class="n">salen</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">char</span> <span class="n">portstr</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span>
</span><span class='line'><span class="k">static</span> <span class="kt">char</span> <span class="n">str</span><span class="p">[</span><span class="mi">128</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">switch</span><span class="p">(</span> <span class="n">sa</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sa_family</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">AF_INET</span>:
</span><span class='line'>             <span class="p">{</span>
</span><span class='line'>                    <span class="k">struct</span> <span class="n">sockaddr_in</span> <span class="o">*</span><span class="n">sin</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr_in</span> <span class="o">*</span><span class="p">)</span><span class="n">sa</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                    <span class="k">if</span><span class="p">(</span><span class="n">inet_ntop</span><span class="p">(</span><span class="n">AF_INET</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">sin</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sin_addr</span><span class="p">,</span> <span class="n">str</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">str</span><span class="p">))</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">return</span> <span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>                    <span class="k">if</span><span class="p">(</span><span class="n">ntohs</span><span class="p">(</span><span class="n">sin</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sin_port</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>                        <span class="p">{</span>
</span><span class='line'>                            <span class="n">snprintf</span><span class="p">(</span><span class="n">portstr</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">portstr</span><span class="p">),</span> <span class="s">&quot;:%d&quot;</span><span class="p">,</span> <span class="n">ntohs</span><span class="p">(</span><span class="n">sin</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sin_port</span><span class="p">));</span>
</span><span class='line'>                            <span class="n">strcat</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="n">portstr</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="k">return</span> <span class="p">(</span><span class="n">str</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">AF_INET6</span>:
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">struct</span> <span class="n">sockaddr_in6</span> <span class="o">*</span><span class="n">sin6</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr_in6</span> <span class="o">*</span><span class="p">)</span><span class="n">sa</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                    <span class="k">if</span><span class="p">(</span><span class="n">inet_ntop</span><span class="p">(</span><span class="n">AF_INET6</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">sin6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sin6_addr</span><span class="p">,</span> <span class="n">str</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">str</span><span class="p">))</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">return</span> <span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>                    <span class="k">if</span><span class="p">(</span><span class="n">ntohs</span><span class="p">(</span><span class="n">sin6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sin6_port</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>                        <span class="p">{</span>
</span><span class='line'>                            <span class="n">snprintf</span><span class="p">(</span><span class="n">portstr</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">portstr</span><span class="p">),</span> <span class="s">&quot;:%d&quot;</span><span class="p">,</span> <span class="n">ntohs</span><span class="p">(</span><span class="n">sin6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sin6_port</span><span class="p">));</span>
</span><span class='line'>                            <span class="n">strcat</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="n">portstr</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="k">return</span> <span class="p">(</span><span class="n">str</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">addrinfo</span> <span class="o">*</span><span class="n">ai</span><span class="p">;</span>
</span><span class='line'><span class="kt">char</span> <span class="o">*</span><span class="n">h</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">opterr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">while</span><span class="p">(</span> <span class="p">(</span> <span class="n">c</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="s">&quot;v&quot;</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>           <span class="cm">/*处理命令行选项*/</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">case</span> <span class="sc">&#39;v&#39;</span>:
</span><span class='line'>                    <span class="n">verbose</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                <span class="k">case</span> <span class="sc">&#39;?&#39;</span>:
</span><span class='line'>                    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;unrecognized option:%c&quot;</span><span class="p">,</span> <span class="n">c</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="n">optind</span> <span class="o">!=</span> <span class="n">argc</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;usage:ping [ -v ] &amp;lt;hostname&amp;gt;&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="n">optind</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">pid</span> <span class="o">=</span> <span class="n">getpid</span><span class="p">()</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="mh">0xffff</span><span class="p">;</span>
</span><span class='line'><span class="n">signal</span><span class="p">(</span><span class="n">SIGALRM</span><span class="p">,</span> <span class="n">sig_alrm</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">ai</span> <span class="o">=</span> <span class="n">host_serv</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>                            <span class="cm">/*处理主机名参数*/</span>
</span><span class='line'>
</span><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="n">sock_ntop_host</span><span class="p">(</span><span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addr</span><span class="p">,</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addrlen</span><span class="p">);</span>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;PING %s (%s): %d data bytes </span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_canonname</span><span class="o">?</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_canonname</span><span class="o">:</span><span class="n">h</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">datalen</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_family</span> <span class="o">==</span> <span class="n">AF_INET</span>  <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">pr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">proto_v4</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span>  <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>     <span class="p">}</span>
</span><span class='line'><span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_family</span> <span class="o">==</span> <span class="n">AF_INET6</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">pr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">proto_v6</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">IN6_IS_ADDR_V4MAPPED</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;(((</span><span class="k">struct</span> <span class="n">sockaddr_in6</span> <span class="o">*</span><span class="p">)</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addr</span><span class="p">)</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sin6_addr</span><span class="p">)))</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;cannot ping IPV4-mapped IPV6 address&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;unknown address family  %d&quot;</span><span class="p">,</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_family</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span> <span class="o">=</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addr</span><span class="p">;</span>
</span><span class='line'><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span> <span class="o">=</span> <span class="n">calloc</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addrlen</span><span class="p">);</span>
</span><span class='line'><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span> <span class="o">=</span> <span class="n">ai</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ai_addrlen</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">readloop</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">readloop</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">size</span><span class="p">;</span>
</span><span class='line'><span class="kt">char</span> <span class="n">recvbuf</span><span class="p">[</span><span class="n">BUFSIZE</span><span class="p">];</span>
</span><span class='line'><span class="kt">char</span> <span class="n">controlbuf</span><span class="p">[</span><span class="n">BUFSIZE</span><span class="p">];</span>
</span><span class='line'><span class="k">struct</span> <span class="n">msghdr</span> <span class="n">msg</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">iovec</span>    <span class="n">iov</span><span class="p">;</span>
</span><span class='line'><span class="kt">ssize_t</span> <span class="n">n</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">timeval</span> <span class="n">tval</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">sockfd</span> <span class="o">=</span> <span class="n">socket</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sa_family</span><span class="p">,</span> <span class="n">SOCK_RAW</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmpproto</span><span class="p">);</span>  <span class="cm">/*创建原始的套接字*/</span>
</span><span class='line'><span class="n">setuid</span><span class="p">(</span><span class="n">getuid</span><span class="p">());</span>                                       <span class="cm">/*不需要特殊的允许*/</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">finit</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="o">*</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">finit</span><span class="p">)();</span>
</span><span class='line'>
</span><span class='line'><span class="n">size</span> <span class="o">=</span> <span class="mi">60</span><span class="o">*</span><span class="mi">1024</span><span class="p">;</span>
</span><span class='line'><span class="n">setsockopt</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="n">SOL_SOCKET</span><span class="p">,</span> <span class="n">SO_RCVBUF</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">size</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">size</span><span class="p">));</span>  <span class="cm">/*设置套接字接受缓冲区的大小*/</span>
</span><span class='line'>
</span><span class='line'><span class="n">sig_alrm</span><span class="p">(</span><span class="n">SIGALRM</span><span class="p">);</span>                                  <span class="cm">/*发送第一个分组*/</span>
</span><span class='line'>
</span><span class='line'><span class="n">iov</span><span class="p">.</span><span class="n">iov_base</span> <span class="o">=</span> <span class="n">recvbuf</span><span class="p">;</span>                               <span class="cm">/*为recvmsg设置msghdr结构*/</span>
</span><span class='line'><span class="n">iov</span><span class="p">.</span><span class="n">iov_len</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">recvbuf</span><span class="p">);</span>
</span><span class='line'><span class="n">msg</span><span class="p">.</span><span class="n">msg_name</span> <span class="o">=</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">;</span>
</span><span class='line'><span class="n">msg</span><span class="p">.</span><span class="n">msg_iov</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">iov</span><span class="p">;</span>
</span><span class='line'><span class="n">msg</span><span class="p">.</span><span class="n">msg_iovlen</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="n">msg</span><span class="p">.</span><span class="n">msg_control</span> <span class="o">=</span> <span class="n">controlbuf</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span> <span class="p">;</span> <span class="p">;)</span>                                                    <span class="cm">/*读取 所有ICMP消息的无限循环*/</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">msg</span><span class="p">.</span><span class="n">msg_namelen</span> <span class="o">=</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">;</span>
</span><span class='line'>        <span class="n">msg</span><span class="p">.</span><span class="n">msg_controllen</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">controlbuf</span><span class="p">);</span>
</span><span class='line'>        <span class="n">n</span> <span class="o">=</span> <span class="n">recvmsg</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">msg</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">n</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span> <span class="n">errno</span> <span class="o">==</span> <span class="n">EINTR</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="nf">printf</span><span class="p">(</span><span class="s">&quot;recvmsg error&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">gettimeofday</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tval</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'><span class="p">(</span><span class="o">*</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">fproc</span><span class="p">)(</span><span class="n">recvbuf</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">msg</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">tval</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">tv_sub</span><span class="p">(</span><span class="k">struct</span> <span class="n">timeval</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">out</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">in</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">(</span> <span class="p">(</span> <span class="n">out</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tv_usec</span> <span class="o">-=</span> <span class="n">in</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tv_usec</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">0</span><span class="p">)</span> <span class="cm">/*out -=in*/</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="o">--</span><span class="n">out</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tv_sec</span><span class="p">;</span>
</span><span class='line'>        <span class="n">out</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tv_usec</span> <span class="o">+=</span> <span class="mi">1000000</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="n">out</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tv_sec</span> <span class="o">-=</span> <span class="n">in</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tv_sec</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">proc_v4</span><span class="p">(</span><span class="kt">char</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">ptr</span><span class="p">,</span> <span class="kt">ssize_t</span> <span class="n">len</span><span class="p">,</span> <span class="k">struct</span> <span class="n">msghdr</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">msg</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tvrecv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">hlen1</span><span class="p">,</span> <span class="n">icmplen</span><span class="p">;</span>
</span><span class='line'><span class="kt">double</span>  <span class="n">rtt</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">ip</span> <span class="o">*</span><span class="n">ip</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">icmp</span> <span class="o">*</span><span class="n">icmp</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tvsend</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">ip</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">ip</span><span class="o">*</span><span class="p">)</span><span class="n">ptr</span><span class="p">;</span>                 <span class="cm">/*IP节的头*/</span>
</span><span class='line'><span class="n">hlen1</span> <span class="o">=</span> <span class="n">ip</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ip_hl</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">2</span><span class="p">;</span>            <span class="cm">/*IP节的长度*/</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="n">ip</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ip_p</span> <span class="o">!=</span> <span class="n">IPPROTO_ICMP</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>                                 <span class="cm">/*没有ICMP*/</span>
</span><span class='line'>
</span><span class='line'><span class="n">icmp</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">icmp</span><span class="o">*</span><span class="p">)</span> <span class="p">(</span><span class="n">ptr</span> <span class="o">+</span> <span class="n">hlen1</span><span class="p">);</span>   <span class="cm">/*ICMP节的头*/</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">icmplen</span> <span class="o">=</span> <span class="n">len</span> <span class="o">-</span><span class="n">hlen1</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_type</span> <span class="o">==</span> <span class="n">ICMP_ECHOREPLY</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_id</span> <span class="o">!=</span> <span class="n">pid</span><span class="p">)</span>          <span class="cm">/*不是对我们的ECHO_REQUEST进行回复*/</span>
</span><span class='line'>            <span class="k">return</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">icmplen</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">16</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span><span class="p">;</span>                                 <span class="cm">/*没有足够数据可用*/</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">tvsend</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="p">)</span><span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_data</span><span class="p">;</span>
</span><span class='line'>        <span class="n">tv_sub</span><span class="p">(</span><span class="n">tvrecv</span><span class="p">,</span> <span class="n">tvsend</span><span class="p">);</span>
</span><span class='line'>        <span class="n">rtt</span> <span class="o">=</span> <span class="n">tvrecv</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tv_sec</span><span class="o">*</span><span class="mf">1000.0</span> <span class="o">+</span> <span class="n">tvrecv</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tv_usec</span><span class="o">/</span><span class="mf">1000.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d bytes from %s: seq=%u, ttl=%d, rtt=%.3f ms</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">icmplen</span><span class="p">,</span> <span class="n">sock_ntop_host</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">),</span>
</span><span class='line'>            <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_seq</span><span class="p">,</span> <span class="n">ip</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">ip_ttl</span><span class="p">,</span> <span class="n">rtt</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">verbose</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d bytes from %s: type = %d, code = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">icmplen</span><span class="p">,</span> <span class="n">sock_ntop_host</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">),</span>
</span><span class='line'>            <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_type</span><span class="p">,</span> <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_code</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">init_v6</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span>  <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span>     <span class="n">on</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span> <span class="n">verbose</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>              <span class="cm">/*设置ICMPv6接收过滤器*/</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">icmp6_filter</span> <span class="n">myfilt</span><span class="p">;</span>
</span><span class='line'>        <span class="n">ICMP6_FILTER_SETBLOCKALL</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">myflit</span><span class="p">);</span>
</span><span class='line'>        <span class="n">ICMP6_FILTER_SETPASS</span><span class="p">(</span><span class="n">ICMP6_ECHO_REPLY</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">myflit</span><span class="p">);</span>
</span><span class='line'>        <span class="n">setsockopt</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="n">IPPROTO_IPV6</span><span class="p">,</span> <span class="n">ICMP6_FILTER</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">myflit</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">myflit</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span> <span class="n">IPV6_RECVHOPLIMIT</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">setsockopt</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="n">IPPROTO_IPV6</span><span class="p">,</span> <span class="n">IPV6_RECVHOPLIMIT</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">on</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">on</span><span class="p">));</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="k">else</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">setsockopt</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="n">IPPROTO_IPV6</span><span class="p">,</span> <span class="n">IPV6_HOPLIMIT</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">on</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">on</span><span class="p">));</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">proc_v6</span><span class="p">(</span><span class="kt">char</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">ptr</span><span class="p">,</span> <span class="kt">ssize_t</span> <span class="n">len</span><span class="p">,</span> <span class="k">struct</span> <span class="n">msghdr</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">msg</span><span class="p">,</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="n">tvrecv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span>  <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">double</span> <span class="n">rtt</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">icmp6_hdr</span><span class="o">*</span> <span class="n">icmp6</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span> <span class="n">tvsend</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">cmsghdr</span> <span class="o">*</span><span class="n">cmsg</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">hlim</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">icmp6</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">icmp6_hdr</span> <span class="o">*</span><span class="p">)</span><span class="n">ptr</span><span class="p">;</span>                 <span class="cm">/*获取ICMPV6首部的指针*/</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="n">len</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">8</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_type</span> <span class="o">==</span> <span class="n">ICMP6_ECHO_REPLY</span><span class="p">)</span>  <span class="cm">/*检查ICMP回射应答*/</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span> <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_id</span> <span class="o">!=</span> <span class="n">pid</span><span class="p">)</span>     <span class="cm">/*不是对我们的ECHO_REQUEST进行回复*/</span>
</span><span class='line'>            <span class="k">return</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">len</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">16</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span><span class="p">;</span>                                <span class="cm">/*没有足够数据可用*/</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">tvsend</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="p">)(</span><span class="n">icmp6</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="n">tv_sub</span><span class="p">(</span><span class="n">tvrecv</span><span class="p">,</span> <span class="n">tvsend</span><span class="p">);</span>
</span><span class='line'>        <span class="n">rtt</span> <span class="o">=</span> <span class="n">tvrecv</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tv_sec</span><span class="o">*</span><span class="mf">1000.0</span> <span class="o">+</span> <span class="n">tvrecv</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">tv_usec</span><span class="o">/</span><span class="mf">1000.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">hlim</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="n">cmsg</span> <span class="o">=</span> <span class="n">CMSG_FIRSTHDR</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span> <span class="n">cmsg</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">;</span> <span class="n">cmsg</span> <span class="o">=</span> <span class="n">CMSG_NXTHDR</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span><span class="n">cmsg</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="n">cmsg</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">cmsg_level</span> <span class="o">==</span> <span class="n">IPPROTO_IPv6</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">cmsg</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">cmsg_type</span> <span class="o">==</span> <span class="n">IPV6_HOPLIMIT</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">hlim</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">u_int32_t</span><span class="o">*</span><span class="p">)</span><span class="n">CMSG_DATA</span><span class="p">(</span><span class="n">cmsg</span><span class="p">);</span>
</span><span class='line'>                        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d bytes from %s:seq = %u, hlim =&quot;</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span><span class="n">sock_ntop_host</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">),</span> <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_seq</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">hlim</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;???&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="nf">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">hlim</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;, rtt=%.3f ms</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">rtt</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="k">else</span> <span class="k">if</span><span class="p">(</span> <span class="n">verbose</span><span class="p">)</span>     <span class="cm">/*若指定-v则显示所有接收ICMP消息*/</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot; %d bytes from %s: type = %d, code = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span> <span class="n">sock_ntop_host</span><span class="p">(</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sarecv</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">),</span>
</span><span class='line'>                <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_type</span><span class="p">,</span> <span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_code</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">sig_alrm</span><span class="p">(</span><span class="kt">int</span>   <span class="n">signo</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">(</span><span class="o">*</span><span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">fsend</span><span class="p">)();</span>
</span><span class='line'>
</span><span class='line'><span class="n">alarm</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">uint16_t</span> <span class="n">in_cksum</span><span class="p">(</span><span class="kt">uint16_t</span> <span class="o">*</span><span class="n">addr</span><span class="p">,</span> <span class="kt">int</span> <span class="n">len</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">nleft</span> <span class="o">=</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'><span class="kt">uint32_t</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="kt">uint16_t</span> <span class="o">*</span><span class="n">w</span> <span class="o">=</span> <span class="n">addr</span><span class="p">;</span>
</span><span class='line'><span class="kt">uint16_t</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="p">(</span> <span class="n">nleft</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">sum</span><span class="o">+=*</span><span class="n">w</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="n">nleft</span> <span class="o">-=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="n">nleft</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="o">*</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="p">)(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">answer</span><span class="p">)</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">w</span><span class="p">;</span>
</span><span class='line'>        <span class="n">sum</span> <span class="o">+=</span> <span class="n">answer</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">sum</span> <span class="o">=</span> <span class="p">(</span><span class="n">sum</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="mi">16</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">sum</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="mh">0xffff</span><span class="p">);</span>
</span><span class='line'><span class="n">sum</span> <span class="o">+=</span> <span class="p">(</span><span class="n">sum</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="mi">16</span><span class="p">);</span>
</span><span class='line'><span class="n">answer</span> <span class="o">=</span> <span class="o">~</span><span class="n">sum</span><span class="p">;</span>
</span><span class='line'><span class="k">return</span> <span class="p">(</span><span class="n">answer</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">send_v4</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">icmp</span> <span class="o">*</span><span class="n">icmp</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">icmp</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">icmp</span> <span class="o">*</span><span class="p">)</span><span class="n">sendbuf</span><span class="p">;</span>                   <span class="cm">/*构造ICMPV4消息*/</span>
</span><span class='line'><span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_type</span> <span class="o">=</span> <span class="n">ICMP_ECHO</span><span class="p">;</span>
</span><span class='line'><span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_code</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_id</span>  <span class="o">=</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'><span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_seq</span> <span class="o">=</span> <span class="n">nsent</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'><span class="n">memset</span><span class="p">(</span><span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_data</span><span class="p">,</span> <span class="mh">0xa5</span><span class="p">,</span> <span class="n">datalen</span><span class="p">);</span>    <span class="cm">/*按照icmp模式来填写*/</span>
</span><span class='line'><span class="n">gettimeofday</span><span class="p">(</span> <span class="p">(</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="p">)</span> <span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_data</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">len</span> <span class="o">=</span> <span class="mi">8</span><span class="o">+</span> <span class="n">datalen</span><span class="p">;</span>                                       <span class="cm">/*校验ICMP 节和数据*/</span>
</span><span class='line'><span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_cksum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">icmp</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp_cksum</span> <span class="o">=</span> <span class="n">in_cksum</span><span class="p">((</span> <span class="n">u_short</span> <span class="o">*</span><span class="p">)</span><span class="n">icmp</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">sendto</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="n">sendbuf</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">);</span>  <span class="cm">/*发送数据报*/</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">void</span> <span class="n">send_v6</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">ifdef</span>  <span class="n">IPV6</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">icmp6_hdr</span>  <span class="o">*</span><span class="n">icmp6</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">icmp6</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">icmp6_hdr</span> <span class="o">*</span><span class="p">)</span><span class="n">sendbuf</span><span class="p">;</span>
</span><span class='line'><span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_type</span> <span class="o">=</span> <span class="n">ICMP6_ECHO_REQUEST</span><span class="p">;</span>
</span><span class='line'><span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_code</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_id</span>  <span class="o">=</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'><span class="n">icmp6</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">icmp6_seq</span> <span class="o">=</span> <span class="n">nsent</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'><span class="n">memset</span><span class="p">((</span><span class="n">icmp6</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span> <span class="mh">0xa5</span><span class="p">,</span> <span class="n">datalen</span><span class="p">);</span>
</span><span class='line'><span class="n">gettimeofday</span><span class="p">(</span> <span class="p">(</span> <span class="k">struct</span> <span class="n">timeval</span> <span class="o">*</span><span class="p">)</span> <span class="p">(</span><span class="n">icmp6</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">len</span> <span class="o">=</span> <span class="mi">8</span><span class="o">+</span> <span class="n">datalen</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">sendto</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="n">sendbuf</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">sasend</span><span class="p">,</span> <span class="n">pr</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">salen</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">endif</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
